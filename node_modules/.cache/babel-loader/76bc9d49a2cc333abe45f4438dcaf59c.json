{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"id\", \"prefixCls\", \"fieldNames\", \"defaultValue\", \"value\", \"changeOnSelect\", \"onChange\", \"displayRender\", \"checkable\", \"searchValue\", \"onSearch\", \"showSearch\", \"expandTrigger\", \"options\", \"dropdownPrefixCls\", \"loadData\", \"popupVisible\", \"open\", \"popupClassName\", \"dropdownClassName\", \"dropdownMenuColumnStyle\", \"popupPlacement\", \"placement\", \"onDropdownVisibleChange\", \"onPopupVisibleChange\", \"expandIcon\", \"loadingIcon\", \"children\"];\nimport * as React from 'react';\nimport useId from \"rc-select/es/hooks/useId\";\nimport { conductCheck } from \"rc-tree/es/utils/conductUtil\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport { BaseSelect } from 'rc-select';\nimport OptionList from './OptionList';\nimport CascaderContext from './context';\nimport { fillFieldNames, toPathKey, toPathKeys } from './utils/commonUtil';\nimport useDisplayValues from './hooks/useDisplayValues';\nimport useRefFunc from './hooks/useRefFunc';\nimport useEntities from './hooks/useEntities';\nimport { formatStrategyValues, toPathOptions } from './utils/treeUtil';\nimport useSearchConfig from './hooks/useSearchConfig';\nimport useSearchOptions from './hooks/useSearchOptions';\nimport warning from \"rc-util/es/warning\";\nimport useMissingValues from './hooks/useMissingValues';\n\nfunction isMultipleValue(value) {\n  return Array.isArray(value) && Array.isArray(value[0]);\n}\n\nfunction toRawValues(value) {\n  if (!value) {\n    return [];\n  }\n\n  if (isMultipleValue(value)) {\n    return value;\n  }\n\n  return value.length === 0 ? [] : [value];\n}\n\nvar Cascader = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var id = props.id,\n      _props$prefixCls = props.prefixCls,\n      prefixCls = _props$prefixCls === void 0 ? 'rc-cascader' : _props$prefixCls,\n      fieldNames = props.fieldNames,\n      defaultValue = props.defaultValue,\n      value = props.value,\n      changeOnSelect = props.changeOnSelect,\n      onChange = props.onChange,\n      displayRender = props.displayRender,\n      checkable = props.checkable,\n      searchValue = props.searchValue,\n      onSearch = props.onSearch,\n      showSearch = props.showSearch,\n      expandTrigger = props.expandTrigger,\n      options = props.options,\n      dropdownPrefixCls = props.dropdownPrefixCls,\n      loadData = props.loadData,\n      popupVisible = props.popupVisible,\n      open = props.open,\n      popupClassName = props.popupClassName,\n      dropdownClassName = props.dropdownClassName,\n      dropdownMenuColumnStyle = props.dropdownMenuColumnStyle,\n      popupPlacement = props.popupPlacement,\n      placement = props.placement,\n      onDropdownVisibleChange = props.onDropdownVisibleChange,\n      onPopupVisibleChange = props.onPopupVisibleChange,\n      _props$expandIcon = props.expandIcon,\n      expandIcon = _props$expandIcon === void 0 ? '>' : _props$expandIcon,\n      loadingIcon = props.loadingIcon,\n      children = props.children,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var mergedId = useId(id);\n  var multiple = !!checkable; // =========================== Values ===========================\n\n  var _useMergedState = useMergedState(defaultValue, {\n    value: value,\n    postState: toRawValues\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      rawValues = _useMergedState2[0],\n      setRawValues = _useMergedState2[1]; // ========================= FieldNames =========================\n\n\n  var mergedFieldNames = React.useMemo(function () {\n    return fillFieldNames(fieldNames);\n  },\n  /* eslint-disable react-hooks/exhaustive-deps */\n  [JSON.stringify(fieldNames)]); // =========================== Option ===========================\n\n  var mergedOptions = React.useMemo(function () {\n    return options || [];\n  }, [options]); // Only used in multiple mode, this fn will not call in single mode\n\n  var getPathKeyEntities = useEntities(mergedOptions, mergedFieldNames);\n  /** Convert path key back to value format */\n\n  var getValueByKeyPath = React.useCallback(function (pathKeys) {\n    var ketPathEntities = getPathKeyEntities();\n    return pathKeys.map(function (pathKey) {\n      var nodes = ketPathEntities[pathKey].nodes;\n      return nodes.map(function (node) {\n        return node[mergedFieldNames.value];\n      });\n    });\n  }, [getPathKeyEntities, mergedFieldNames]); // =========================== Search ===========================\n\n  var _useMergedState3 = useMergedState('', {\n    value: searchValue,\n    postState: function postState(search) {\n      return search || '';\n    }\n  }),\n      _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n      mergedSearchValue = _useMergedState4[0],\n      setSearchValue = _useMergedState4[1];\n\n  var onInternalSearch = function onInternalSearch(searchText, info) {\n    setSearchValue(searchText);\n\n    if (info.source !== 'blur' && onSearch) {\n      onSearch(searchText);\n    }\n  };\n\n  var _useSearchConfig = useSearchConfig(showSearch),\n      _useSearchConfig2 = _slicedToArray(_useSearchConfig, 2),\n      mergedShowSearch = _useSearchConfig2[0],\n      searchConfig = _useSearchConfig2[1];\n\n  var searchOptions = useSearchOptions(mergedSearchValue, mergedOptions, mergedFieldNames, dropdownPrefixCls || prefixCls, searchConfig, changeOnSelect); // =========================== Values ===========================\n\n  var getMissingValues = useMissingValues(mergedOptions, mergedFieldNames); // Fill `rawValues` with checked conduction values\n\n  var _React$useMemo = React.useMemo(function () {\n    var _getMissingValues = getMissingValues(rawValues),\n        _getMissingValues2 = _slicedToArray(_getMissingValues, 2),\n        existValues = _getMissingValues2[0],\n        missingValues = _getMissingValues2[1];\n\n    if (!multiple || !rawValues.length) {\n      return [existValues, [], missingValues];\n    }\n\n    var keyPathValues = toPathKeys(existValues);\n    var ketPathEntities = getPathKeyEntities();\n\n    var _conductCheck = conductCheck(keyPathValues, true, ketPathEntities),\n        checkedKeys = _conductCheck.checkedKeys,\n        halfCheckedKeys = _conductCheck.halfCheckedKeys; // Convert key back to value cells\n    // Convert key back to value cells\n\n\n    return [getValueByKeyPath(checkedKeys), getValueByKeyPath(halfCheckedKeys), missingValues];\n  }, [multiple, rawValues, getPathKeyEntities, getValueByKeyPath, getMissingValues]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 3),\n      checkedValues = _React$useMemo2[0],\n      halfCheckedValues = _React$useMemo2[1],\n      missingCheckedValues = _React$useMemo2[2];\n\n  var deDuplicatedValues = React.useMemo(function () {\n    var checkedKeys = toPathKeys(checkedValues);\n    var deduplicateKeys = formatStrategyValues(checkedKeys, getPathKeyEntities);\n    return [].concat(_toConsumableArray(missingCheckedValues), _toConsumableArray(getValueByKeyPath(deduplicateKeys)));\n  }, [checkedValues, getPathKeyEntities, getValueByKeyPath, missingCheckedValues]);\n  var displayValues = useDisplayValues(deDuplicatedValues, mergedOptions, mergedFieldNames, multiple, displayRender); // =========================== Change ===========================\n\n  var triggerChange = useRefFunc(function (nextValues) {\n    setRawValues(nextValues); // Save perf if no need trigger event\n\n    if (onChange) {\n      var nextRawValues = toRawValues(nextValues);\n      var valueOptions = nextRawValues.map(function (valueCells) {\n        return toPathOptions(valueCells, mergedOptions, mergedFieldNames).map(function (valueOpt) {\n          return valueOpt.option;\n        });\n      });\n      var triggerValues = multiple ? nextRawValues : nextRawValues[0];\n      var triggerOptions = multiple ? valueOptions : valueOptions[0];\n      onChange(triggerValues, triggerOptions);\n    }\n  }); // =========================== Select ===========================\n\n  var onInternalSelect = useRefFunc(function (valuePath) {\n    setSearchValue('');\n\n    if (!multiple) {\n      triggerChange(valuePath);\n    } else {\n      // Prepare conduct required info\n      var pathKey = toPathKey(valuePath);\n      var checkedPathKeys = toPathKeys(checkedValues);\n      var halfCheckedPathKeys = toPathKeys(halfCheckedValues);\n      var existInChecked = checkedPathKeys.includes(pathKey);\n      var existInMissing = missingCheckedValues.some(function (valueCells) {\n        return toPathKey(valueCells) === pathKey;\n      }); // Do update\n\n      var nextCheckedValues = checkedValues;\n      var nextMissingValues = missingCheckedValues;\n\n      if (existInMissing && !existInChecked) {\n        // Missing value only do filter\n        nextMissingValues = missingCheckedValues.filter(function (valueCells) {\n          return toPathKey(valueCells) !== pathKey;\n        });\n      } else {\n        // Update checked key first\n        var nextRawCheckedKeys = existInChecked ? checkedPathKeys.filter(function (key) {\n          return key !== pathKey;\n        }) : [].concat(_toConsumableArray(checkedPathKeys), [pathKey]);\n        var pathKeyEntities = getPathKeyEntities(); // Conduction by selected or not\n\n        var checkedKeys;\n\n        if (existInChecked) {\n          var _conductCheck2 = conductCheck(nextRawCheckedKeys, {\n            checked: false,\n            halfCheckedKeys: halfCheckedPathKeys\n          }, pathKeyEntities);\n\n          checkedKeys = _conductCheck2.checkedKeys;\n        } else {\n          var _conductCheck3 = conductCheck(nextRawCheckedKeys, true, pathKeyEntities);\n\n          checkedKeys = _conductCheck3.checkedKeys;\n        } // Roll up to parent level keys\n\n\n        var deDuplicatedKeys = formatStrategyValues(checkedKeys, getPathKeyEntities);\n        nextCheckedValues = getValueByKeyPath(deDuplicatedKeys);\n      }\n\n      triggerChange([].concat(_toConsumableArray(nextMissingValues), _toConsumableArray(nextCheckedValues)));\n    }\n  }); // Display Value change logic\n\n  var onDisplayValuesChange = function onDisplayValuesChange(_, info) {\n    if (info.type === 'clear') {\n      triggerChange([]);\n      return;\n    } // Cascader do not support `add` type. Only support `remove`\n\n\n    var valueCells = info.values[0].valueCells;\n    onInternalSelect(valueCells);\n  }; // ============================ Open ============================\n\n\n  if (process.env.NODE_ENV !== 'production') {\n    warning(!onPopupVisibleChange, '`onPopupVisibleChange` is deprecated. Please use `onDropdownVisibleChange` instead.');\n    warning(popupVisible === undefined, '`popupVisible` is deprecated. Please use `open` instead.');\n    warning(popupClassName === undefined, '`popupClassName` is deprecated. Please use `dropdownClassName` instead.');\n    warning(popupPlacement === undefined, '`popupPlacement` is deprecated. Please use `placement` instead.');\n  }\n\n  var mergedOpen = open !== undefined ? open : popupVisible;\n  var mergedDropdownClassName = dropdownClassName || popupClassName;\n  var mergedPlacement = placement || popupPlacement;\n\n  var onInternalDropdownVisibleChange = function onInternalDropdownVisibleChange(nextVisible) {\n    onDropdownVisibleChange === null || onDropdownVisibleChange === void 0 ? void 0 : onDropdownVisibleChange(nextVisible);\n    onPopupVisibleChange === null || onPopupVisibleChange === void 0 ? void 0 : onPopupVisibleChange(nextVisible);\n  }; // ========================== Context ===========================\n\n\n  var cascaderContext = React.useMemo(function () {\n    return {\n      options: mergedOptions,\n      fieldNames: mergedFieldNames,\n      values: checkedValues,\n      halfValues: halfCheckedValues,\n      changeOnSelect: changeOnSelect,\n      onSelect: onInternalSelect,\n      checkable: checkable,\n      searchOptions: searchOptions,\n      dropdownPrefixCls: dropdownPrefixCls,\n      loadData: loadData,\n      expandTrigger: expandTrigger,\n      expandIcon: expandIcon,\n      loadingIcon: loadingIcon,\n      dropdownMenuColumnStyle: dropdownMenuColumnStyle\n    };\n  }, [mergedOptions, mergedFieldNames, checkedValues, halfCheckedValues, changeOnSelect, onInternalSelect, checkable, searchOptions, dropdownPrefixCls, loadData, expandTrigger, expandIcon, loadingIcon, dropdownMenuColumnStyle]); // ==============================================================\n  // ==                          Render                          ==\n  // ==============================================================\n\n  var emptyOptions = !(mergedSearchValue ? searchOptions : mergedOptions).length;\n  var dropdownStyle = // Search to match width\n  mergedSearchValue && searchConfig.matchInputWidth || // Empty keep the width\n  emptyOptions ? {} : {\n    minWidth: 'auto'\n  };\n  return /*#__PURE__*/React.createElement(CascaderContext.Provider, {\n    value: cascaderContext\n  }, /*#__PURE__*/React.createElement(BaseSelect, _extends({}, restProps, {\n    // MISC\n    ref: ref,\n    id: mergedId,\n    prefixCls: prefixCls,\n    dropdownMatchSelectWidth: false,\n    dropdownStyle: dropdownStyle // Value\n    ,\n    displayValues: displayValues,\n    onDisplayValuesChange: onDisplayValuesChange,\n    mode: multiple ? 'multiple' : undefined // Search\n    ,\n    searchValue: mergedSearchValue,\n    onSearch: onInternalSearch,\n    showSearch: mergedShowSearch // Options\n    ,\n    OptionList: OptionList,\n    emptyOptions: emptyOptions // Open\n    ,\n    open: mergedOpen,\n    dropdownClassName: mergedDropdownClassName,\n    placement: mergedPlacement,\n    onDropdownVisibleChange: onInternalDropdownVisibleChange // Children\n    ,\n    getRawInputElement: function getRawInputElement() {\n      return children;\n    }\n  })));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Cascader.displayName = 'Cascader';\n}\n\nexport default Cascader;","map":{"version":3,"names":["_extends","_toConsumableArray","_slicedToArray","_objectWithoutProperties","_excluded","React","useId","conductCheck","useMergedState","BaseSelect","OptionList","CascaderContext","fillFieldNames","toPathKey","toPathKeys","useDisplayValues","useRefFunc","useEntities","formatStrategyValues","toPathOptions","useSearchConfig","useSearchOptions","warning","useMissingValues","isMultipleValue","value","Array","isArray","toRawValues","length","Cascader","forwardRef","props","ref","id","_props$prefixCls","prefixCls","fieldNames","defaultValue","changeOnSelect","onChange","displayRender","checkable","searchValue","onSearch","showSearch","expandTrigger","options","dropdownPrefixCls","loadData","popupVisible","open","popupClassName","dropdownClassName","dropdownMenuColumnStyle","popupPlacement","placement","onDropdownVisibleChange","onPopupVisibleChange","_props$expandIcon","expandIcon","loadingIcon","children","restProps","mergedId","multiple","_useMergedState","postState","_useMergedState2","rawValues","setRawValues","mergedFieldNames","useMemo","JSON","stringify","mergedOptions","getPathKeyEntities","getValueByKeyPath","useCallback","pathKeys","ketPathEntities","map","pathKey","nodes","node","_useMergedState3","search","_useMergedState4","mergedSearchValue","setSearchValue","onInternalSearch","searchText","info","source","_useSearchConfig","_useSearchConfig2","mergedShowSearch","searchConfig","searchOptions","getMissingValues","_React$useMemo","_getMissingValues","_getMissingValues2","existValues","missingValues","keyPathValues","_conductCheck","checkedKeys","halfCheckedKeys","_React$useMemo2","checkedValues","halfCheckedValues","missingCheckedValues","deDuplicatedValues","deduplicateKeys","concat","displayValues","triggerChange","nextValues","nextRawValues","valueOptions","valueCells","valueOpt","option","triggerValues","triggerOptions","onInternalSelect","valuePath","checkedPathKeys","halfCheckedPathKeys","existInChecked","includes","existInMissing","some","nextCheckedValues","nextMissingValues","filter","nextRawCheckedKeys","key","pathKeyEntities","_conductCheck2","checked","_conductCheck3","deDuplicatedKeys","onDisplayValuesChange","_","type","values","process","env","NODE_ENV","undefined","mergedOpen","mergedDropdownClassName","mergedPlacement","onInternalDropdownVisibleChange","nextVisible","cascaderContext","halfValues","onSelect","emptyOptions","dropdownStyle","matchInputWidth","minWidth","createElement","Provider","dropdownMatchSelectWidth","mode","getRawInputElement","displayName"],"sources":["/project/React-Flow-Automation/node_modules/rc-cascader/es/Cascader.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"id\", \"prefixCls\", \"fieldNames\", \"defaultValue\", \"value\", \"changeOnSelect\", \"onChange\", \"displayRender\", \"checkable\", \"searchValue\", \"onSearch\", \"showSearch\", \"expandTrigger\", \"options\", \"dropdownPrefixCls\", \"loadData\", \"popupVisible\", \"open\", \"popupClassName\", \"dropdownClassName\", \"dropdownMenuColumnStyle\", \"popupPlacement\", \"placement\", \"onDropdownVisibleChange\", \"onPopupVisibleChange\", \"expandIcon\", \"loadingIcon\", \"children\"];\nimport * as React from 'react';\nimport useId from \"rc-select/es/hooks/useId\";\nimport { conductCheck } from \"rc-tree/es/utils/conductUtil\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport { BaseSelect } from 'rc-select';\nimport OptionList from './OptionList';\nimport CascaderContext from './context';\nimport { fillFieldNames, toPathKey, toPathKeys } from './utils/commonUtil';\nimport useDisplayValues from './hooks/useDisplayValues';\nimport useRefFunc from './hooks/useRefFunc';\nimport useEntities from './hooks/useEntities';\nimport { formatStrategyValues, toPathOptions } from './utils/treeUtil';\nimport useSearchConfig from './hooks/useSearchConfig';\nimport useSearchOptions from './hooks/useSearchOptions';\nimport warning from \"rc-util/es/warning\";\nimport useMissingValues from './hooks/useMissingValues';\n\nfunction isMultipleValue(value) {\n  return Array.isArray(value) && Array.isArray(value[0]);\n}\n\nfunction toRawValues(value) {\n  if (!value) {\n    return [];\n  }\n\n  if (isMultipleValue(value)) {\n    return value;\n  }\n\n  return value.length === 0 ? [] : [value];\n}\n\nvar Cascader = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var id = props.id,\n      _props$prefixCls = props.prefixCls,\n      prefixCls = _props$prefixCls === void 0 ? 'rc-cascader' : _props$prefixCls,\n      fieldNames = props.fieldNames,\n      defaultValue = props.defaultValue,\n      value = props.value,\n      changeOnSelect = props.changeOnSelect,\n      onChange = props.onChange,\n      displayRender = props.displayRender,\n      checkable = props.checkable,\n      searchValue = props.searchValue,\n      onSearch = props.onSearch,\n      showSearch = props.showSearch,\n      expandTrigger = props.expandTrigger,\n      options = props.options,\n      dropdownPrefixCls = props.dropdownPrefixCls,\n      loadData = props.loadData,\n      popupVisible = props.popupVisible,\n      open = props.open,\n      popupClassName = props.popupClassName,\n      dropdownClassName = props.dropdownClassName,\n      dropdownMenuColumnStyle = props.dropdownMenuColumnStyle,\n      popupPlacement = props.popupPlacement,\n      placement = props.placement,\n      onDropdownVisibleChange = props.onDropdownVisibleChange,\n      onPopupVisibleChange = props.onPopupVisibleChange,\n      _props$expandIcon = props.expandIcon,\n      expandIcon = _props$expandIcon === void 0 ? '>' : _props$expandIcon,\n      loadingIcon = props.loadingIcon,\n      children = props.children,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var mergedId = useId(id);\n  var multiple = !!checkable; // =========================== Values ===========================\n\n  var _useMergedState = useMergedState(defaultValue, {\n    value: value,\n    postState: toRawValues\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      rawValues = _useMergedState2[0],\n      setRawValues = _useMergedState2[1]; // ========================= FieldNames =========================\n\n\n  var mergedFieldNames = React.useMemo(function () {\n    return fillFieldNames(fieldNames);\n  },\n  /* eslint-disable react-hooks/exhaustive-deps */\n  [JSON.stringify(fieldNames)]); // =========================== Option ===========================\n\n  var mergedOptions = React.useMemo(function () {\n    return options || [];\n  }, [options]); // Only used in multiple mode, this fn will not call in single mode\n\n  var getPathKeyEntities = useEntities(mergedOptions, mergedFieldNames);\n  /** Convert path key back to value format */\n\n  var getValueByKeyPath = React.useCallback(function (pathKeys) {\n    var ketPathEntities = getPathKeyEntities();\n    return pathKeys.map(function (pathKey) {\n      var nodes = ketPathEntities[pathKey].nodes;\n      return nodes.map(function (node) {\n        return node[mergedFieldNames.value];\n      });\n    });\n  }, [getPathKeyEntities, mergedFieldNames]); // =========================== Search ===========================\n\n  var _useMergedState3 = useMergedState('', {\n    value: searchValue,\n    postState: function postState(search) {\n      return search || '';\n    }\n  }),\n      _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n      mergedSearchValue = _useMergedState4[0],\n      setSearchValue = _useMergedState4[1];\n\n  var onInternalSearch = function onInternalSearch(searchText, info) {\n    setSearchValue(searchText);\n\n    if (info.source !== 'blur' && onSearch) {\n      onSearch(searchText);\n    }\n  };\n\n  var _useSearchConfig = useSearchConfig(showSearch),\n      _useSearchConfig2 = _slicedToArray(_useSearchConfig, 2),\n      mergedShowSearch = _useSearchConfig2[0],\n      searchConfig = _useSearchConfig2[1];\n\n  var searchOptions = useSearchOptions(mergedSearchValue, mergedOptions, mergedFieldNames, dropdownPrefixCls || prefixCls, searchConfig, changeOnSelect); // =========================== Values ===========================\n\n  var getMissingValues = useMissingValues(mergedOptions, mergedFieldNames); // Fill `rawValues` with checked conduction values\n\n  var _React$useMemo = React.useMemo(function () {\n    var _getMissingValues = getMissingValues(rawValues),\n        _getMissingValues2 = _slicedToArray(_getMissingValues, 2),\n        existValues = _getMissingValues2[0],\n        missingValues = _getMissingValues2[1];\n\n    if (!multiple || !rawValues.length) {\n      return [existValues, [], missingValues];\n    }\n\n    var keyPathValues = toPathKeys(existValues);\n    var ketPathEntities = getPathKeyEntities();\n\n    var _conductCheck = conductCheck(keyPathValues, true, ketPathEntities),\n        checkedKeys = _conductCheck.checkedKeys,\n        halfCheckedKeys = _conductCheck.halfCheckedKeys; // Convert key back to value cells\n\n\n    // Convert key back to value cells\n    return [getValueByKeyPath(checkedKeys), getValueByKeyPath(halfCheckedKeys), missingValues];\n  }, [multiple, rawValues, getPathKeyEntities, getValueByKeyPath, getMissingValues]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 3),\n      checkedValues = _React$useMemo2[0],\n      halfCheckedValues = _React$useMemo2[1],\n      missingCheckedValues = _React$useMemo2[2];\n\n  var deDuplicatedValues = React.useMemo(function () {\n    var checkedKeys = toPathKeys(checkedValues);\n    var deduplicateKeys = formatStrategyValues(checkedKeys, getPathKeyEntities);\n    return [].concat(_toConsumableArray(missingCheckedValues), _toConsumableArray(getValueByKeyPath(deduplicateKeys)));\n  }, [checkedValues, getPathKeyEntities, getValueByKeyPath, missingCheckedValues]);\n  var displayValues = useDisplayValues(deDuplicatedValues, mergedOptions, mergedFieldNames, multiple, displayRender); // =========================== Change ===========================\n\n  var triggerChange = useRefFunc(function (nextValues) {\n    setRawValues(nextValues); // Save perf if no need trigger event\n\n    if (onChange) {\n      var nextRawValues = toRawValues(nextValues);\n      var valueOptions = nextRawValues.map(function (valueCells) {\n        return toPathOptions(valueCells, mergedOptions, mergedFieldNames).map(function (valueOpt) {\n          return valueOpt.option;\n        });\n      });\n      var triggerValues = multiple ? nextRawValues : nextRawValues[0];\n      var triggerOptions = multiple ? valueOptions : valueOptions[0];\n      onChange(triggerValues, triggerOptions);\n    }\n  }); // =========================== Select ===========================\n\n  var onInternalSelect = useRefFunc(function (valuePath) {\n    setSearchValue('');\n\n    if (!multiple) {\n      triggerChange(valuePath);\n    } else {\n      // Prepare conduct required info\n      var pathKey = toPathKey(valuePath);\n      var checkedPathKeys = toPathKeys(checkedValues);\n      var halfCheckedPathKeys = toPathKeys(halfCheckedValues);\n      var existInChecked = checkedPathKeys.includes(pathKey);\n      var existInMissing = missingCheckedValues.some(function (valueCells) {\n        return toPathKey(valueCells) === pathKey;\n      }); // Do update\n\n      var nextCheckedValues = checkedValues;\n      var nextMissingValues = missingCheckedValues;\n\n      if (existInMissing && !existInChecked) {\n        // Missing value only do filter\n        nextMissingValues = missingCheckedValues.filter(function (valueCells) {\n          return toPathKey(valueCells) !== pathKey;\n        });\n      } else {\n        // Update checked key first\n        var nextRawCheckedKeys = existInChecked ? checkedPathKeys.filter(function (key) {\n          return key !== pathKey;\n        }) : [].concat(_toConsumableArray(checkedPathKeys), [pathKey]);\n        var pathKeyEntities = getPathKeyEntities(); // Conduction by selected or not\n\n        var checkedKeys;\n\n        if (existInChecked) {\n          var _conductCheck2 = conductCheck(nextRawCheckedKeys, {\n            checked: false,\n            halfCheckedKeys: halfCheckedPathKeys\n          }, pathKeyEntities);\n\n          checkedKeys = _conductCheck2.checkedKeys;\n        } else {\n          var _conductCheck3 = conductCheck(nextRawCheckedKeys, true, pathKeyEntities);\n\n          checkedKeys = _conductCheck3.checkedKeys;\n        } // Roll up to parent level keys\n\n\n        var deDuplicatedKeys = formatStrategyValues(checkedKeys, getPathKeyEntities);\n        nextCheckedValues = getValueByKeyPath(deDuplicatedKeys);\n      }\n\n      triggerChange([].concat(_toConsumableArray(nextMissingValues), _toConsumableArray(nextCheckedValues)));\n    }\n  }); // Display Value change logic\n\n  var onDisplayValuesChange = function onDisplayValuesChange(_, info) {\n    if (info.type === 'clear') {\n      triggerChange([]);\n      return;\n    } // Cascader do not support `add` type. Only support `remove`\n\n\n    var valueCells = info.values[0].valueCells;\n    onInternalSelect(valueCells);\n  }; // ============================ Open ============================\n\n\n  if (process.env.NODE_ENV !== 'production') {\n    warning(!onPopupVisibleChange, '`onPopupVisibleChange` is deprecated. Please use `onDropdownVisibleChange` instead.');\n    warning(popupVisible === undefined, '`popupVisible` is deprecated. Please use `open` instead.');\n    warning(popupClassName === undefined, '`popupClassName` is deprecated. Please use `dropdownClassName` instead.');\n    warning(popupPlacement === undefined, '`popupPlacement` is deprecated. Please use `placement` instead.');\n  }\n\n  var mergedOpen = open !== undefined ? open : popupVisible;\n  var mergedDropdownClassName = dropdownClassName || popupClassName;\n  var mergedPlacement = placement || popupPlacement;\n\n  var onInternalDropdownVisibleChange = function onInternalDropdownVisibleChange(nextVisible) {\n    onDropdownVisibleChange === null || onDropdownVisibleChange === void 0 ? void 0 : onDropdownVisibleChange(nextVisible);\n    onPopupVisibleChange === null || onPopupVisibleChange === void 0 ? void 0 : onPopupVisibleChange(nextVisible);\n  }; // ========================== Context ===========================\n\n\n  var cascaderContext = React.useMemo(function () {\n    return {\n      options: mergedOptions,\n      fieldNames: mergedFieldNames,\n      values: checkedValues,\n      halfValues: halfCheckedValues,\n      changeOnSelect: changeOnSelect,\n      onSelect: onInternalSelect,\n      checkable: checkable,\n      searchOptions: searchOptions,\n      dropdownPrefixCls: dropdownPrefixCls,\n      loadData: loadData,\n      expandTrigger: expandTrigger,\n      expandIcon: expandIcon,\n      loadingIcon: loadingIcon,\n      dropdownMenuColumnStyle: dropdownMenuColumnStyle\n    };\n  }, [mergedOptions, mergedFieldNames, checkedValues, halfCheckedValues, changeOnSelect, onInternalSelect, checkable, searchOptions, dropdownPrefixCls, loadData, expandTrigger, expandIcon, loadingIcon, dropdownMenuColumnStyle]); // ==============================================================\n  // ==                          Render                          ==\n  // ==============================================================\n\n  var emptyOptions = !(mergedSearchValue ? searchOptions : mergedOptions).length;\n  var dropdownStyle = // Search to match width\n  mergedSearchValue && searchConfig.matchInputWidth || // Empty keep the width\n  emptyOptions ? {} : {\n    minWidth: 'auto'\n  };\n  return /*#__PURE__*/React.createElement(CascaderContext.Provider, {\n    value: cascaderContext\n  }, /*#__PURE__*/React.createElement(BaseSelect, _extends({}, restProps, {\n    // MISC\n    ref: ref,\n    id: mergedId,\n    prefixCls: prefixCls,\n    dropdownMatchSelectWidth: false,\n    dropdownStyle: dropdownStyle // Value\n    ,\n    displayValues: displayValues,\n    onDisplayValuesChange: onDisplayValuesChange,\n    mode: multiple ? 'multiple' : undefined // Search\n    ,\n    searchValue: mergedSearchValue,\n    onSearch: onInternalSearch,\n    showSearch: mergedShowSearch // Options\n    ,\n    OptionList: OptionList,\n    emptyOptions: emptyOptions // Open\n    ,\n    open: mergedOpen,\n    dropdownClassName: mergedDropdownClassName,\n    placement: mergedPlacement,\n    onDropdownVisibleChange: onInternalDropdownVisibleChange // Children\n    ,\n    getRawInputElement: function getRawInputElement() {\n      return children;\n    }\n  })));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Cascader.displayName = 'Cascader';\n}\n\nexport default Cascader;"],"mappings":"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"},"metadata":{},"sourceType":"module"}