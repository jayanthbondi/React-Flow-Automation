{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport * as React from 'react';\nimport { useState, useCallback, useMemo } from 'react';\nimport DownOutlined from \"@ant-design/icons/es/icons/DownOutlined\";\nimport { convertDataToEntities } from \"rc-tree/es/utils/treeUtil\";\nimport { conductCheck } from \"rc-tree/es/utils/conductUtil\";\nimport { arrAdd, arrDel } from \"rc-tree/es/util\";\nimport { INTERNAL_COL_DEFINE } from 'rc-table';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Checkbox from '../../checkbox';\nimport Dropdown from '../../dropdown';\nimport Menu from '../../menu';\nimport Radio from '../../radio';\nimport devWarning from '../../_util/devWarning'; // TODO: warning if use ajax!!!\n\nexport var SELECTION_COLUMN = {};\nexport var SELECTION_ALL = 'SELECT_ALL';\nexport var SELECTION_INVERT = 'SELECT_INVERT';\nexport var SELECTION_NONE = 'SELECT_NONE';\n\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n\n    if (record && _typeof(record) === 'object' && childrenColumnName in record) {\n      list = [].concat(_toConsumableArray(list), _toConsumableArray(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\n\nexport default function useSelection(rowSelection, config) {\n  var _ref = rowSelection || {},\n      preserveSelectedRowKeys = _ref.preserveSelectedRowKeys,\n      selectedRowKeys = _ref.selectedRowKeys,\n      defaultSelectedRowKeys = _ref.defaultSelectedRowKeys,\n      getCheckboxProps = _ref.getCheckboxProps,\n      onSelectionChange = _ref.onChange,\n      onSelect = _ref.onSelect,\n      onSelectAll = _ref.onSelectAll,\n      onSelectInvert = _ref.onSelectInvert,\n      onSelectNone = _ref.onSelectNone,\n      onSelectMultiple = _ref.onSelectMultiple,\n      selectionColWidth = _ref.columnWidth,\n      selectionType = _ref.type,\n      selections = _ref.selections,\n      fixed = _ref.fixed,\n      customizeRenderCell = _ref.renderCell,\n      hideSelectAll = _ref.hideSelectAll,\n      _ref$checkStrictly = _ref.checkStrictly,\n      checkStrictly = _ref$checkStrictly === void 0 ? true : _ref$checkStrictly;\n\n  var prefixCls = config.prefixCls,\n      data = config.data,\n      pageData = config.pageData,\n      getRecordByKey = config.getRecordByKey,\n      getRowKey = config.getRowKey,\n      expandType = config.expandType,\n      childrenColumnName = config.childrenColumnName,\n      tableLocale = config.locale,\n      getPopupContainer = config.getPopupContainer; // ========================= Keys =========================\n\n  var _useMergedState = useMergedState(selectedRowKeys || defaultSelectedRowKeys || [], {\n    value: selectedRowKeys\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedSelectedKeys = _useMergedState2[0],\n      setMergedSelectedKeys = _useMergedState2[1]; // ======================== Caches ========================\n\n\n  var preserveRecordsRef = React.useRef(new Map());\n  var updatePreserveRecordsCache = useCallback(function (keys) {\n    if (preserveSelectedRowKeys) {\n      var newCache = new Map(); // Keep key if mark as preserveSelectedRowKeys\n\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (!record && preserveRecordsRef.current.has(key)) {\n          record = preserveRecordsRef.current.get(key);\n        }\n\n        newCache.set(key, record);\n      }); // Refresh to new cache\n\n      preserveRecordsRef.current = newCache;\n    }\n  }, [getRecordByKey, preserveSelectedRowKeys]); // Update cache with selectedKeys\n\n  React.useEffect(function () {\n    updatePreserveRecordsCache(mergedSelectedKeys);\n  }, [mergedSelectedKeys]);\n\n  var _useMemo = useMemo(function () {\n    return checkStrictly ? {\n      keyEntities: null\n    } : convertDataToEntities(data, {\n      externalGetKey: getRowKey,\n      childrenPropName: childrenColumnName\n    });\n  }, [data, getRowKey, checkStrictly, childrenColumnName]),\n      keyEntities = _useMemo.keyEntities; // Get flatten data\n\n\n  var flattedData = useMemo(function () {\n    return flattenData(pageData, childrenColumnName);\n  }, [pageData, childrenColumnName]); // Get all checkbox props\n\n  var checkboxPropsMap = useMemo(function () {\n    var map = new Map();\n    flattedData.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      map.set(key, checkboxProps);\n\n      if (process.env.NODE_ENV !== 'production' && ('checked' in checkboxProps || 'defaultChecked' in checkboxProps)) {\n        devWarning(false, 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n      }\n    });\n    return map;\n  }, [flattedData, getRowKey, getCheckboxProps]);\n  var isCheckboxDisabled = useCallback(function (r) {\n    var _a;\n\n    return !!((_a = checkboxPropsMap.get(getRowKey(r))) === null || _a === void 0 ? void 0 : _a.disabled);\n  }, [checkboxPropsMap, getRowKey]);\n\n  var _useMemo2 = useMemo(function () {\n    if (checkStrictly) {\n      return [mergedSelectedKeys || [], []];\n    }\n\n    var _conductCheck = conductCheck(mergedSelectedKeys, true, keyEntities, isCheckboxDisabled),\n        checkedKeys = _conductCheck.checkedKeys,\n        halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n    return [checkedKeys || [], halfCheckedKeys];\n  }, [mergedSelectedKeys, checkStrictly, keyEntities, isCheckboxDisabled]),\n      _useMemo3 = _slicedToArray(_useMemo2, 2),\n      derivedSelectedKeys = _useMemo3[0],\n      derivedHalfSelectedKeys = _useMemo3[1];\n\n  var derivedSelectedKeySet = useMemo(function () {\n    var keys = selectionType === 'radio' ? derivedSelectedKeys.slice(0, 1) : derivedSelectedKeys;\n    return new Set(keys);\n  }, [derivedSelectedKeys, selectionType]);\n  var derivedHalfSelectedKeySet = useMemo(function () {\n    return selectionType === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys);\n  }, [derivedHalfSelectedKeys, selectionType]); // Save last selected key to enable range selection\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      lastSelectedKey = _useState2[0],\n      setLastSelectedKey = _useState2[1]; // Reset if rowSelection reset\n\n\n  React.useEffect(function () {\n    if (!rowSelection) {\n      setMergedSelectedKeys([]);\n    }\n  }, [!!rowSelection]);\n  var setSelectedKeys = useCallback(function (keys) {\n    var availableKeys;\n    var records;\n    updatePreserveRecordsCache(keys);\n\n    if (preserveSelectedRowKeys) {\n      availableKeys = keys;\n      records = keys.map(function (key) {\n        return preserveRecordsRef.current.get(key);\n      });\n    } else {\n      // Filter key which not exist in the `dataSource`\n      availableKeys = [];\n      records = [];\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (record !== undefined) {\n          availableKeys.push(key);\n          records.push(record);\n        }\n      });\n    }\n\n    setMergedSelectedKeys(availableKeys);\n    onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(availableKeys, records);\n  }, [setMergedSelectedKeys, getRecordByKey, onSelectionChange, preserveSelectedRowKeys]); // ====================== Selections ======================\n  // Trigger single `onSelect` event\n\n  var triggerSingleSelection = useCallback(function (key, selected, keys, event) {\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n\n    setSelectedKeys(keys);\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\n  var mergedSelections = useMemo(function () {\n    if (!selections || hideSelectAll) {\n      return null;\n    }\n\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT, SELECTION_NONE] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.map(function (record, index) {\n              return getRowKey(record, index);\n            }).filter(function (key) {\n              var checkProps = checkboxPropsMap.get(key);\n              return !(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled) || derivedSelectedKeySet.has(key);\n            }));\n          }\n        };\n      }\n\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(derivedSelectedKeySet);\n            pageData.forEach(function (record, index) {\n              var key = getRowKey(record, index);\n              var checkProps = checkboxPropsMap.get(key);\n\n              if (!(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled)) {\n                if (keySet.has(key)) {\n                  keySet[\"delete\"](key);\n                } else {\n                  keySet.add(key);\n                }\n              }\n            });\n            var keys = Array.from(keySet);\n\n            if (onSelectInvert) {\n              devWarning(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.');\n              onSelectInvert(keys);\n            }\n\n            setSelectedKeys(keys);\n          }\n        };\n      }\n\n      if (selection === SELECTION_NONE) {\n        return {\n          key: 'none',\n          text: tableLocale.selectNone,\n          onSelect: function onSelect() {\n            onSelectNone === null || onSelectNone === void 0 ? void 0 : onSelectNone();\n            setSelectedKeys(Array.from(derivedSelectedKeySet).filter(function (key) {\n              var checkProps = checkboxPropsMap.get(key);\n              return checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled;\n            }));\n          }\n        };\n      }\n\n      return selection;\n    });\n  }, [selections, derivedSelectedKeySet, pageData, getRowKey, onSelectInvert, setSelectedKeys]); // ======================= Columns ========================\n\n  var transformColumns = useCallback(function (columns) {\n    var _a; // >>>>>>>>>>> Skip if not exists `rowSelection`\n\n\n    if (!rowSelection) {\n      if (process.env.NODE_ENV !== 'production') {\n        devWarning(!columns.includes(SELECTION_COLUMN), 'Table', '`rowSelection` is not config but `SELECTION_COLUMN` exists in the `columns`.');\n      }\n\n      return columns.filter(function (col) {\n        return col !== SELECTION_COLUMN;\n      });\n    } // >>>>>>>>>>> Support selection\n\n\n    var cloneColumns = _toConsumableArray(columns);\n\n    var keySet = new Set(derivedSelectedKeySet); // Record key only need check with enabled\n\n    var recordKeys = flattedData.map(getRowKey).filter(function (key) {\n      return !checkboxPropsMap.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet[\"delete\"](key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          if (!keySet.has(key)) {\n            keySet.add(key);\n            changeKeys.push(key);\n          }\n        });\n      }\n\n      var keys = Array.from(keySet);\n      onSelectAll === null || onSelectAll === void 0 ? void 0 : onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n        return getRecordByKey(k);\n      }), changeKeys.map(function (k) {\n        return getRecordByKey(k);\n      }));\n      setSelectedKeys(keys);\n    }; // ===================== Render =====================\n    // Title Cell\n\n\n    var title;\n\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n\n      if (mergedSelections) {\n        var menu = /*#__PURE__*/React.createElement(Menu, {\n          getPopupContainer: getPopupContainer\n        }, mergedSelections.map(function (selection, index) {\n          var key = selection.key,\n              text = selection.text,\n              onSelectionClick = selection.onSelect;\n          return /*#__PURE__*/React.createElement(Menu.Item, {\n            key: key || index,\n            onClick: function onClick() {\n              onSelectionClick === null || onSelectionClick === void 0 ? void 0 : onSelectionClick(recordKeys);\n            }\n          }, text);\n        }));\n        customizeSelections = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-selection-extra\")\n        }, /*#__PURE__*/React.createElement(Dropdown, {\n          overlay: menu,\n          getPopupContainer: getPopupContainer\n        }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(DownOutlined, null))));\n      }\n\n      var allDisabledData = flattedData.map(function (record, index) {\n        var key = getRowKey(record, index);\n        var checkboxProps = checkboxPropsMap.get(key) || {};\n        return _extends({\n          checked: keySet.has(key)\n        }, checkboxProps);\n      }).filter(function (_ref2) {\n        var disabled = _ref2.disabled;\n        return disabled;\n      });\n      var allDisabled = !!allDisabledData.length && allDisabledData.length === flattedData.length;\n      var allDisabledAndChecked = allDisabled && allDisabledData.every(function (_ref3) {\n        var checked = _ref3.checked;\n        return checked;\n      });\n      var allDisabledSomeChecked = allDisabled && allDisabledData.some(function (_ref4) {\n        var checked = _ref4.checked;\n        return checked;\n      });\n      title = !hideSelectAll && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-selection\")\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        checked: !allDisabled ? !!flattedData.length && checkedCurrentAll : allDisabledAndChecked,\n        indeterminate: !allDisabled ? !checkedCurrentAll && checkedCurrentSome : !allDisabledAndChecked && allDisabledSomeChecked,\n        onChange: onSelectAllChange,\n        disabled: flattedData.length === 0 || allDisabled,\n        skipGroup: true\n      }), customizeSelections);\n    } // Body Cell\n\n\n    var renderCell;\n\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: /*#__PURE__*/React.createElement(Radio, _extends({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_, record, index) {\n        var _a;\n\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        var indeterminate = derivedHalfSelectedKeySet.has(key);\n        var checkboxProps = checkboxPropsMap.get(key);\n        var mergedIndeterminate;\n\n        if (expandType === 'nest') {\n          mergedIndeterminate = indeterminate;\n          devWarning(typeof (checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== 'boolean', 'Table', 'set `indeterminate` using `rowSelection.getCheckboxProps` is not allowed with tree structured dataSource.');\n        } else {\n          mergedIndeterminate = (_a = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== null && _a !== void 0 ? _a : indeterminate;\n        } // Record checked\n\n\n        return {\n          node: /*#__PURE__*/React.createElement(Checkbox, _extends({}, checkboxProps, {\n            indeterminate: mergedIndeterminate,\n            checked: checked,\n            skipGroup: true,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(_ref5) {\n              var nativeEvent = _ref5.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1; // Get range of this\n\n              if (shiftKey && checkStrictly) {\n                var pointKeys = new Set([lastSelectedKey, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n\n                  return false;\n                });\n              }\n\n              if (endIndex !== -1 && startIndex !== endIndex && checkStrictly) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet[\"delete\"](recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n\n                var keys = Array.from(keySet);\n                onSelectMultiple === null || onSelectMultiple === void 0 ? void 0 : onSelectMultiple(!checked, keys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }), changedKeys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }));\n                setSelectedKeys(keys);\n              } else {\n                // Single record selected\n                var originCheckedKeys = derivedSelectedKeys;\n\n                if (checkStrictly) {\n                  var checkedKeys = checked ? arrDel(originCheckedKeys, key) : arrAdd(originCheckedKeys, key);\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\n                } else {\n                  // Always fill first\n                  var result = conductCheck([].concat(_toConsumableArray(originCheckedKeys), [key]), true, keyEntities, isCheckboxDisabled);\n                  var _checkedKeys = result.checkedKeys,\n                      halfCheckedKeys = result.halfCheckedKeys;\n                  var nextCheckedKeys = _checkedKeys; // If remove, we do it again to correction\n\n                  if (checked) {\n                    var tempKeySet = new Set(_checkedKeys);\n                    tempKeySet[\"delete\"](key);\n                    nextCheckedKeys = conductCheck(Array.from(tempKeySet), {\n                      checked: false,\n                      halfCheckedKeys: halfCheckedKeys\n                    }, keyEntities, isCheckboxDisabled).checkedKeys;\n                  }\n\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\n                }\n              }\n\n              setLastSelectedKey(key);\n            }\n          })),\n          checked: checked\n        };\n      };\n    }\n\n    var renderSelectionCell = function renderSelectionCell(_, record, index) {\n      var _renderCell = renderCell(_, record, index),\n          node = _renderCell.node,\n          checked = _renderCell.checked;\n\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n\n      return node;\n    }; // Insert selection column if not exist\n\n\n    if (!cloneColumns.includes(SELECTION_COLUMN)) {\n      // Always after expand icon\n      if (cloneColumns.findIndex(function (col) {\n        var _a;\n\n        return ((_a = col[INTERNAL_COL_DEFINE]) === null || _a === void 0 ? void 0 : _a.columnType) === 'EXPAND_COLUMN';\n      }) === 0) {\n        var _cloneColumns = cloneColumns,\n            _cloneColumns2 = _toArray(_cloneColumns),\n            expandColumn = _cloneColumns2[0],\n            restColumns = _cloneColumns2.slice(1);\n\n        cloneColumns = [expandColumn, SELECTION_COLUMN].concat(_toConsumableArray(restColumns));\n      } else {\n        // Normal insert at first column\n        cloneColumns = [SELECTION_COLUMN].concat(_toConsumableArray(cloneColumns));\n      }\n    } // Deduplicate selection column\n\n\n    var selectionColumnIndex = cloneColumns.indexOf(SELECTION_COLUMN);\n\n    if (process.env.NODE_ENV !== 'production' && cloneColumns.filter(function (col) {\n      return col === SELECTION_COLUMN;\n    }).length > 1) {\n      devWarning(false, 'Table', 'Multiple `SELECTION_COLUMN` exist in `columns`.');\n    }\n\n    cloneColumns = cloneColumns.filter(function (column, index) {\n      return column !== SELECTION_COLUMN || index === selectionColumnIndex;\n    }); // Fixed column logic\n\n    var prevCol = cloneColumns[selectionColumnIndex - 1];\n    var nextCol = cloneColumns[selectionColumnIndex + 1];\n    var mergedFixed = fixed;\n\n    if (mergedFixed === undefined) {\n      if ((nextCol === null || nextCol === void 0 ? void 0 : nextCol.fixed) !== undefined) {\n        mergedFixed = nextCol.fixed;\n      } else if ((prevCol === null || prevCol === void 0 ? void 0 : prevCol.fixed) !== undefined) {\n        mergedFixed = prevCol.fixed;\n      }\n    }\n\n    if (mergedFixed && prevCol && ((_a = prevCol[INTERNAL_COL_DEFINE]) === null || _a === void 0 ? void 0 : _a.columnType) === 'EXPAND_COLUMN' && prevCol.fixed === undefined) {\n      prevCol.fixed = mergedFixed;\n    } // Replace with real selection column\n\n\n    var selectionColumn = _defineProperty({\n      fixed: mergedFixed,\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls, \"-selection-column\"),\n      title: rowSelection.columnTitle || title,\n      render: renderSelectionCell\n    }, INTERNAL_COL_DEFINE, {\n      className: \"\".concat(prefixCls, \"-selection-col\")\n    });\n\n    return cloneColumns.map(function (col) {\n      return col === SELECTION_COLUMN ? selectionColumn : col;\n    });\n  }, [getRowKey, flattedData, rowSelection, derivedSelectedKeys, derivedSelectedKeySet, derivedHalfSelectedKeySet, selectionColWidth, mergedSelections, expandType, lastSelectedKey, checkboxPropsMap, onSelectMultiple, triggerSingleSelection, isCheckboxDisabled]);\n  return [transformColumns, derivedSelectedKeySet];\n}","map":{"version":3,"names":["_defineProperty","_toArray","_extends","_slicedToArray","_toConsumableArray","_typeof","React","useState","useCallback","useMemo","DownOutlined","convertDataToEntities","conductCheck","arrAdd","arrDel","INTERNAL_COL_DEFINE","useMergedState","Checkbox","Dropdown","Menu","Radio","devWarning","SELECTION_COLUMN","SELECTION_ALL","SELECTION_INVERT","SELECTION_NONE","flattenData","data","childrenColumnName","list","forEach","record","push","concat","useSelection","rowSelection","config","_ref","preserveSelectedRowKeys","selectedRowKeys","defaultSelectedRowKeys","getCheckboxProps","onSelectionChange","onChange","onSelect","onSelectAll","onSelectInvert","onSelectNone","onSelectMultiple","selectionColWidth","columnWidth","selectionType","type","selections","fixed","customizeRenderCell","renderCell","hideSelectAll","_ref$checkStrictly","checkStrictly","prefixCls","pageData","getRecordByKey","getRowKey","expandType","tableLocale","locale","getPopupContainer","_useMergedState","value","_useMergedState2","mergedSelectedKeys","setMergedSelectedKeys","preserveRecordsRef","useRef","Map","updatePreserveRecordsCache","keys","newCache","key","current","has","get","set","useEffect","_useMemo","keyEntities","externalGetKey","childrenPropName","flattedData","checkboxPropsMap","map","index","checkboxProps","process","env","NODE_ENV","isCheckboxDisabled","r","_a","disabled","_useMemo2","_conductCheck","checkedKeys","halfCheckedKeys","_useMemo3","derivedSelectedKeys","derivedHalfSelectedKeys","derivedSelectedKeySet","slice","Set","derivedHalfSelectedKeySet","_useState","_useState2","lastSelectedKey","setLastSelectedKey","setSelectedKeys","availableKeys","records","undefined","triggerSingleSelection","selected","event","rows","k","mergedSelections","selectionList","selection","text","selectionAll","filter","checkProps","selectInvert","keySet","add","Array","from","selectNone","transformColumns","columns","includes","col","cloneColumns","recordKeys","checkedCurrentAll","every","checkedCurrentSome","some","onSelectAllChange","changeKeys","title","customizeSelections","menu","createElement","onSelectionClick","Item","onClick","className","overlay","allDisabledData","checked","_ref2","allDisabled","length","allDisabledAndChecked","_ref3","allDisabledSomeChecked","_ref4","indeterminate","skipGroup","_","node","e","stopPropagation","nativeEvent","mergedIndeterminate","_ref5","shiftKey","startIndex","endIndex","pointKeys","recordKey","recordIndex","rangeKeys","changedKeys","originCheckedKeys","result","_checkedKeys","nextCheckedKeys","tempKeySet","renderSelectionCell","_renderCell","findIndex","columnType","_cloneColumns","_cloneColumns2","expandColumn","restColumns","selectionColumnIndex","indexOf","column","prevCol","nextCol","mergedFixed","selectionColumn","width","columnTitle","render"],"sources":["/project/React-Flow-Automation/node_modules/antd/es/table/hooks/useSelection.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport * as React from 'react';\nimport { useState, useCallback, useMemo } from 'react';\nimport DownOutlined from \"@ant-design/icons/es/icons/DownOutlined\";\nimport { convertDataToEntities } from \"rc-tree/es/utils/treeUtil\";\nimport { conductCheck } from \"rc-tree/es/utils/conductUtil\";\nimport { arrAdd, arrDel } from \"rc-tree/es/util\";\nimport { INTERNAL_COL_DEFINE } from 'rc-table';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Checkbox from '../../checkbox';\nimport Dropdown from '../../dropdown';\nimport Menu from '../../menu';\nimport Radio from '../../radio';\nimport devWarning from '../../_util/devWarning'; // TODO: warning if use ajax!!!\n\nexport var SELECTION_COLUMN = {};\nexport var SELECTION_ALL = 'SELECT_ALL';\nexport var SELECTION_INVERT = 'SELECT_INVERT';\nexport var SELECTION_NONE = 'SELECT_NONE';\n\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n\n    if (record && _typeof(record) === 'object' && childrenColumnName in record) {\n      list = [].concat(_toConsumableArray(list), _toConsumableArray(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\n\nexport default function useSelection(rowSelection, config) {\n  var _ref = rowSelection || {},\n      preserveSelectedRowKeys = _ref.preserveSelectedRowKeys,\n      selectedRowKeys = _ref.selectedRowKeys,\n      defaultSelectedRowKeys = _ref.defaultSelectedRowKeys,\n      getCheckboxProps = _ref.getCheckboxProps,\n      onSelectionChange = _ref.onChange,\n      onSelect = _ref.onSelect,\n      onSelectAll = _ref.onSelectAll,\n      onSelectInvert = _ref.onSelectInvert,\n      onSelectNone = _ref.onSelectNone,\n      onSelectMultiple = _ref.onSelectMultiple,\n      selectionColWidth = _ref.columnWidth,\n      selectionType = _ref.type,\n      selections = _ref.selections,\n      fixed = _ref.fixed,\n      customizeRenderCell = _ref.renderCell,\n      hideSelectAll = _ref.hideSelectAll,\n      _ref$checkStrictly = _ref.checkStrictly,\n      checkStrictly = _ref$checkStrictly === void 0 ? true : _ref$checkStrictly;\n\n  var prefixCls = config.prefixCls,\n      data = config.data,\n      pageData = config.pageData,\n      getRecordByKey = config.getRecordByKey,\n      getRowKey = config.getRowKey,\n      expandType = config.expandType,\n      childrenColumnName = config.childrenColumnName,\n      tableLocale = config.locale,\n      getPopupContainer = config.getPopupContainer; // ========================= Keys =========================\n\n  var _useMergedState = useMergedState(selectedRowKeys || defaultSelectedRowKeys || [], {\n    value: selectedRowKeys\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedSelectedKeys = _useMergedState2[0],\n      setMergedSelectedKeys = _useMergedState2[1]; // ======================== Caches ========================\n\n\n  var preserveRecordsRef = React.useRef(new Map());\n  var updatePreserveRecordsCache = useCallback(function (keys) {\n    if (preserveSelectedRowKeys) {\n      var newCache = new Map(); // Keep key if mark as preserveSelectedRowKeys\n\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (!record && preserveRecordsRef.current.has(key)) {\n          record = preserveRecordsRef.current.get(key);\n        }\n\n        newCache.set(key, record);\n      }); // Refresh to new cache\n\n      preserveRecordsRef.current = newCache;\n    }\n  }, [getRecordByKey, preserveSelectedRowKeys]); // Update cache with selectedKeys\n\n  React.useEffect(function () {\n    updatePreserveRecordsCache(mergedSelectedKeys);\n  }, [mergedSelectedKeys]);\n\n  var _useMemo = useMemo(function () {\n    return checkStrictly ? {\n      keyEntities: null\n    } : convertDataToEntities(data, {\n      externalGetKey: getRowKey,\n      childrenPropName: childrenColumnName\n    });\n  }, [data, getRowKey, checkStrictly, childrenColumnName]),\n      keyEntities = _useMemo.keyEntities; // Get flatten data\n\n\n  var flattedData = useMemo(function () {\n    return flattenData(pageData, childrenColumnName);\n  }, [pageData, childrenColumnName]); // Get all checkbox props\n\n  var checkboxPropsMap = useMemo(function () {\n    var map = new Map();\n    flattedData.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      map.set(key, checkboxProps);\n\n      if (process.env.NODE_ENV !== 'production' && ('checked' in checkboxProps || 'defaultChecked' in checkboxProps)) {\n        devWarning(false, 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n      }\n    });\n    return map;\n  }, [flattedData, getRowKey, getCheckboxProps]);\n  var isCheckboxDisabled = useCallback(function (r) {\n    var _a;\n\n    return !!((_a = checkboxPropsMap.get(getRowKey(r))) === null || _a === void 0 ? void 0 : _a.disabled);\n  }, [checkboxPropsMap, getRowKey]);\n\n  var _useMemo2 = useMemo(function () {\n    if (checkStrictly) {\n      return [mergedSelectedKeys || [], []];\n    }\n\n    var _conductCheck = conductCheck(mergedSelectedKeys, true, keyEntities, isCheckboxDisabled),\n        checkedKeys = _conductCheck.checkedKeys,\n        halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n    return [checkedKeys || [], halfCheckedKeys];\n  }, [mergedSelectedKeys, checkStrictly, keyEntities, isCheckboxDisabled]),\n      _useMemo3 = _slicedToArray(_useMemo2, 2),\n      derivedSelectedKeys = _useMemo3[0],\n      derivedHalfSelectedKeys = _useMemo3[1];\n\n  var derivedSelectedKeySet = useMemo(function () {\n    var keys = selectionType === 'radio' ? derivedSelectedKeys.slice(0, 1) : derivedSelectedKeys;\n    return new Set(keys);\n  }, [derivedSelectedKeys, selectionType]);\n  var derivedHalfSelectedKeySet = useMemo(function () {\n    return selectionType === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys);\n  }, [derivedHalfSelectedKeys, selectionType]); // Save last selected key to enable range selection\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      lastSelectedKey = _useState2[0],\n      setLastSelectedKey = _useState2[1]; // Reset if rowSelection reset\n\n\n  React.useEffect(function () {\n    if (!rowSelection) {\n      setMergedSelectedKeys([]);\n    }\n  }, [!!rowSelection]);\n  var setSelectedKeys = useCallback(function (keys) {\n    var availableKeys;\n    var records;\n    updatePreserveRecordsCache(keys);\n\n    if (preserveSelectedRowKeys) {\n      availableKeys = keys;\n      records = keys.map(function (key) {\n        return preserveRecordsRef.current.get(key);\n      });\n    } else {\n      // Filter key which not exist in the `dataSource`\n      availableKeys = [];\n      records = [];\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (record !== undefined) {\n          availableKeys.push(key);\n          records.push(record);\n        }\n      });\n    }\n\n    setMergedSelectedKeys(availableKeys);\n    onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(availableKeys, records);\n  }, [setMergedSelectedKeys, getRecordByKey, onSelectionChange, preserveSelectedRowKeys]); // ====================== Selections ======================\n  // Trigger single `onSelect` event\n\n  var triggerSingleSelection = useCallback(function (key, selected, keys, event) {\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n\n    setSelectedKeys(keys);\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\n  var mergedSelections = useMemo(function () {\n    if (!selections || hideSelectAll) {\n      return null;\n    }\n\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT, SELECTION_NONE] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.map(function (record, index) {\n              return getRowKey(record, index);\n            }).filter(function (key) {\n              var checkProps = checkboxPropsMap.get(key);\n              return !(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled) || derivedSelectedKeySet.has(key);\n            }));\n          }\n        };\n      }\n\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(derivedSelectedKeySet);\n            pageData.forEach(function (record, index) {\n              var key = getRowKey(record, index);\n              var checkProps = checkboxPropsMap.get(key);\n\n              if (!(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled)) {\n                if (keySet.has(key)) {\n                  keySet[\"delete\"](key);\n                } else {\n                  keySet.add(key);\n                }\n              }\n            });\n            var keys = Array.from(keySet);\n\n            if (onSelectInvert) {\n              devWarning(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.');\n              onSelectInvert(keys);\n            }\n\n            setSelectedKeys(keys);\n          }\n        };\n      }\n\n      if (selection === SELECTION_NONE) {\n        return {\n          key: 'none',\n          text: tableLocale.selectNone,\n          onSelect: function onSelect() {\n            onSelectNone === null || onSelectNone === void 0 ? void 0 : onSelectNone();\n            setSelectedKeys(Array.from(derivedSelectedKeySet).filter(function (key) {\n              var checkProps = checkboxPropsMap.get(key);\n              return checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled;\n            }));\n          }\n        };\n      }\n\n      return selection;\n    });\n  }, [selections, derivedSelectedKeySet, pageData, getRowKey, onSelectInvert, setSelectedKeys]); // ======================= Columns ========================\n\n  var transformColumns = useCallback(function (columns) {\n    var _a; // >>>>>>>>>>> Skip if not exists `rowSelection`\n\n\n    if (!rowSelection) {\n      if (process.env.NODE_ENV !== 'production') {\n        devWarning(!columns.includes(SELECTION_COLUMN), 'Table', '`rowSelection` is not config but `SELECTION_COLUMN` exists in the `columns`.');\n      }\n\n      return columns.filter(function (col) {\n        return col !== SELECTION_COLUMN;\n      });\n    } // >>>>>>>>>>> Support selection\n\n\n    var cloneColumns = _toConsumableArray(columns);\n\n    var keySet = new Set(derivedSelectedKeySet); // Record key only need check with enabled\n\n    var recordKeys = flattedData.map(getRowKey).filter(function (key) {\n      return !checkboxPropsMap.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet[\"delete\"](key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          if (!keySet.has(key)) {\n            keySet.add(key);\n            changeKeys.push(key);\n          }\n        });\n      }\n\n      var keys = Array.from(keySet);\n      onSelectAll === null || onSelectAll === void 0 ? void 0 : onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n        return getRecordByKey(k);\n      }), changeKeys.map(function (k) {\n        return getRecordByKey(k);\n      }));\n      setSelectedKeys(keys);\n    }; // ===================== Render =====================\n    // Title Cell\n\n\n    var title;\n\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n\n      if (mergedSelections) {\n        var menu = /*#__PURE__*/React.createElement(Menu, {\n          getPopupContainer: getPopupContainer\n        }, mergedSelections.map(function (selection, index) {\n          var key = selection.key,\n              text = selection.text,\n              onSelectionClick = selection.onSelect;\n          return /*#__PURE__*/React.createElement(Menu.Item, {\n            key: key || index,\n            onClick: function onClick() {\n              onSelectionClick === null || onSelectionClick === void 0 ? void 0 : onSelectionClick(recordKeys);\n            }\n          }, text);\n        }));\n        customizeSelections = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-selection-extra\")\n        }, /*#__PURE__*/React.createElement(Dropdown, {\n          overlay: menu,\n          getPopupContainer: getPopupContainer\n        }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(DownOutlined, null))));\n      }\n\n      var allDisabledData = flattedData.map(function (record, index) {\n        var key = getRowKey(record, index);\n        var checkboxProps = checkboxPropsMap.get(key) || {};\n        return _extends({\n          checked: keySet.has(key)\n        }, checkboxProps);\n      }).filter(function (_ref2) {\n        var disabled = _ref2.disabled;\n        return disabled;\n      });\n      var allDisabled = !!allDisabledData.length && allDisabledData.length === flattedData.length;\n      var allDisabledAndChecked = allDisabled && allDisabledData.every(function (_ref3) {\n        var checked = _ref3.checked;\n        return checked;\n      });\n      var allDisabledSomeChecked = allDisabled && allDisabledData.some(function (_ref4) {\n        var checked = _ref4.checked;\n        return checked;\n      });\n      title = !hideSelectAll && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-selection\")\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        checked: !allDisabled ? !!flattedData.length && checkedCurrentAll : allDisabledAndChecked,\n        indeterminate: !allDisabled ? !checkedCurrentAll && checkedCurrentSome : !allDisabledAndChecked && allDisabledSomeChecked,\n        onChange: onSelectAllChange,\n        disabled: flattedData.length === 0 || allDisabled,\n        skipGroup: true\n      }), customizeSelections);\n    } // Body Cell\n\n\n    var renderCell;\n\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: /*#__PURE__*/React.createElement(Radio, _extends({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_, record, index) {\n        var _a;\n\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        var indeterminate = derivedHalfSelectedKeySet.has(key);\n        var checkboxProps = checkboxPropsMap.get(key);\n        var mergedIndeterminate;\n\n        if (expandType === 'nest') {\n          mergedIndeterminate = indeterminate;\n          devWarning(typeof (checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== 'boolean', 'Table', 'set `indeterminate` using `rowSelection.getCheckboxProps` is not allowed with tree structured dataSource.');\n        } else {\n          mergedIndeterminate = (_a = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== null && _a !== void 0 ? _a : indeterminate;\n        } // Record checked\n\n\n        return {\n          node: /*#__PURE__*/React.createElement(Checkbox, _extends({}, checkboxProps, {\n            indeterminate: mergedIndeterminate,\n            checked: checked,\n            skipGroup: true,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(_ref5) {\n              var nativeEvent = _ref5.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1; // Get range of this\n\n              if (shiftKey && checkStrictly) {\n                var pointKeys = new Set([lastSelectedKey, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n\n                  return false;\n                });\n              }\n\n              if (endIndex !== -1 && startIndex !== endIndex && checkStrictly) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet[\"delete\"](recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n\n                var keys = Array.from(keySet);\n                onSelectMultiple === null || onSelectMultiple === void 0 ? void 0 : onSelectMultiple(!checked, keys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }), changedKeys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }));\n                setSelectedKeys(keys);\n              } else {\n                // Single record selected\n                var originCheckedKeys = derivedSelectedKeys;\n\n                if (checkStrictly) {\n                  var checkedKeys = checked ? arrDel(originCheckedKeys, key) : arrAdd(originCheckedKeys, key);\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\n                } else {\n                  // Always fill first\n                  var result = conductCheck([].concat(_toConsumableArray(originCheckedKeys), [key]), true, keyEntities, isCheckboxDisabled);\n                  var _checkedKeys = result.checkedKeys,\n                      halfCheckedKeys = result.halfCheckedKeys;\n                  var nextCheckedKeys = _checkedKeys; // If remove, we do it again to correction\n\n                  if (checked) {\n                    var tempKeySet = new Set(_checkedKeys);\n                    tempKeySet[\"delete\"](key);\n                    nextCheckedKeys = conductCheck(Array.from(tempKeySet), {\n                      checked: false,\n                      halfCheckedKeys: halfCheckedKeys\n                    }, keyEntities, isCheckboxDisabled).checkedKeys;\n                  }\n\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\n                }\n              }\n\n              setLastSelectedKey(key);\n            }\n          })),\n          checked: checked\n        };\n      };\n    }\n\n    var renderSelectionCell = function renderSelectionCell(_, record, index) {\n      var _renderCell = renderCell(_, record, index),\n          node = _renderCell.node,\n          checked = _renderCell.checked;\n\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n\n      return node;\n    }; // Insert selection column if not exist\n\n\n    if (!cloneColumns.includes(SELECTION_COLUMN)) {\n      // Always after expand icon\n      if (cloneColumns.findIndex(function (col) {\n        var _a;\n\n        return ((_a = col[INTERNAL_COL_DEFINE]) === null || _a === void 0 ? void 0 : _a.columnType) === 'EXPAND_COLUMN';\n      }) === 0) {\n        var _cloneColumns = cloneColumns,\n            _cloneColumns2 = _toArray(_cloneColumns),\n            expandColumn = _cloneColumns2[0],\n            restColumns = _cloneColumns2.slice(1);\n\n        cloneColumns = [expandColumn, SELECTION_COLUMN].concat(_toConsumableArray(restColumns));\n      } else {\n        // Normal insert at first column\n        cloneColumns = [SELECTION_COLUMN].concat(_toConsumableArray(cloneColumns));\n      }\n    } // Deduplicate selection column\n\n\n    var selectionColumnIndex = cloneColumns.indexOf(SELECTION_COLUMN);\n\n    if (process.env.NODE_ENV !== 'production' && cloneColumns.filter(function (col) {\n      return col === SELECTION_COLUMN;\n    }).length > 1) {\n      devWarning(false, 'Table', 'Multiple `SELECTION_COLUMN` exist in `columns`.');\n    }\n\n    cloneColumns = cloneColumns.filter(function (column, index) {\n      return column !== SELECTION_COLUMN || index === selectionColumnIndex;\n    }); // Fixed column logic\n\n    var prevCol = cloneColumns[selectionColumnIndex - 1];\n    var nextCol = cloneColumns[selectionColumnIndex + 1];\n    var mergedFixed = fixed;\n\n    if (mergedFixed === undefined) {\n      if ((nextCol === null || nextCol === void 0 ? void 0 : nextCol.fixed) !== undefined) {\n        mergedFixed = nextCol.fixed;\n      } else if ((prevCol === null || prevCol === void 0 ? void 0 : prevCol.fixed) !== undefined) {\n        mergedFixed = prevCol.fixed;\n      }\n    }\n\n    if (mergedFixed && prevCol && ((_a = prevCol[INTERNAL_COL_DEFINE]) === null || _a === void 0 ? void 0 : _a.columnType) === 'EXPAND_COLUMN' && prevCol.fixed === undefined) {\n      prevCol.fixed = mergedFixed;\n    } // Replace with real selection column\n\n\n    var selectionColumn = _defineProperty({\n      fixed: mergedFixed,\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls, \"-selection-column\"),\n      title: rowSelection.columnTitle || title,\n      render: renderSelectionCell\n    }, INTERNAL_COL_DEFINE, {\n      className: \"\".concat(prefixCls, \"-selection-col\")\n    });\n\n    return cloneColumns.map(function (col) {\n      return col === SELECTION_COLUMN ? selectionColumn : col;\n    });\n  }, [getRowKey, flattedData, rowSelection, derivedSelectedKeys, derivedSelectedKeySet, derivedHalfSelectedKeySet, selectionColWidth, mergedSelections, expandType, lastSelectedKey, checkboxPropsMap, onSelectMultiple, triggerSingleSelection, isCheckboxDisabled]);\n  return [transformColumns, derivedSelectedKeySet];\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}