{"ast":null,"code":"import _objectSpread from \"/project/React-Flow-Automation/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n\nvar _jsxFileName = \"/project/React-Flow-Automation/src/Nodes/Base.tsx\",\n    _this = this;\n\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as colors from '@contactlab/ds-tokens/constants/colors';\nimport { DatabaseOutlined, MailOutlined, CommentOutlined, CheckCircleOutlined, FlagOutlined } from '@ant-design/icons';\nimport * as css from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var BaseNode = function BaseNode(_ref) {\n  var type = _ref.type,\n      data = _ref.data,\n      selected = _ref.selected,\n      disabled = _ref.disabled,\n      onNodeClick = _ref.onNodeClick;\n  return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({\n    \"data-selected\": selected,\n    \"aria-disabled\": disabled,\n    className: css.NodeInnerWrapper,\n    style: {\n      color: getColor(type)\n    }\n  }, onNodeClick && {\n    onClick: function onClick() {\n      return onNodeClick(type, data);\n    }\n  }), {}, {\n    children: [getIconSrc(type), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.NodeContent,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.NodeTitle,\n        children: data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: css.NodeDesc,\n        children: data.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, _this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, _this);\n}; // --- Helpers\n\n_c = BaseNode;\n\nvar getColor = function getColor(type) {\n  switch (type) {\n    case 'source':\n      return colors.success;\n\n    case 'email':\n      return colors.accent;\n\n    case 'sms':\n      return colors.accent;\n\n    case 'waitThenCheck':\n      return colors.warning;\n\n    case 'end':\n      return colors.base;\n  }\n};\n\nvar getIconSrc = function getIconSrc(type) {\n  var color = getColor(type);\n\n  switch (type) {\n    case 'source':\n      return /*#__PURE__*/_jsxDEV(DatabaseOutlined, {\n        className: css.NodeIcon,\n        style: {\n          color: color\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 14\n      }, _this);\n\n    case 'email':\n      return /*#__PURE__*/_jsxDEV(MailOutlined, {\n        className: css.NodeIcon,\n        style: {\n          color: color\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 14\n      }, _this);\n\n    case 'sms':\n      return /*#__PURE__*/_jsxDEV(CommentOutlined, {\n        className: css.NodeIcon,\n        style: {\n          color: color\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 14\n      }, _this);\n\n    case 'waitThenCheck':\n      return /*#__PURE__*/_jsxDEV(CheckCircleOutlined, {\n        className: css.NodeIcon,\n        style: {\n          color: color\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 14\n      }, _this);\n\n    case 'end':\n      return /*#__PURE__*/_jsxDEV(FlagOutlined, {\n        className: css.NodeIcon,\n        style: {\n          color: color\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 14\n      }, _this);\n  }\n}; // --- Types\n\n\nvar _c;\n\n$RefreshReg$(_c, \"BaseNode\");","map":{"version":3,"names":["colors","DatabaseOutlined","MailOutlined","CommentOutlined","CheckCircleOutlined","FlagOutlined","css","BaseNode","type","data","selected","disabled","onNodeClick","NodeInnerWrapper","color","getColor","onClick","getIconSrc","NodeContent","NodeTitle","title","NodeDesc","description","success","accent","warning","base","NodeIcon"],"sources":["/project/React-Flow-Automation/src/Nodes/Base.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-use-before-define */\r\n\r\nimport {FC, ReactNode} from 'react';\r\nimport type {NodeComponentProps} from 'react-flow-renderer';\r\nimport * as colors from '@contactlab/ds-tokens/constants/colors';\r\nimport {\r\n  DatabaseOutlined,\r\n  MailOutlined,\r\n  CommentOutlined,\r\n  CheckCircleOutlined,\r\n  FlagOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport * as css from './style';\r\n\r\nexport const BaseNode: FC<BaseNodeProps> = ({\r\n  type,\r\n  data,\r\n  selected,\r\n  disabled,\r\n  onNodeClick\r\n}) => {\r\n  return (\r\n    <div\r\n      data-selected={selected}\r\n      aria-disabled={disabled}\r\n      className={css.NodeInnerWrapper}\r\n      style={{color: getColor(type)}}\r\n      {...(onNodeClick && {onClick: () => onNodeClick(type, data)})}\r\n    >\r\n      {getIconSrc(type)}\r\n      <div className={css.NodeContent}>\r\n        <div className={css.NodeTitle}>{data.title}</div>\r\n        <p className={css.NodeDesc}>{data.description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// --- Helpers\r\nconst getColor = (type: NodeType) => {\r\n  switch (type) {\r\n    case 'source':\r\n      return colors.success;\r\n    case 'email':\r\n      return colors.accent;\r\n    case 'sms':\r\n      return colors.accent;\r\n    case 'waitThenCheck':\r\n      return colors.warning;\r\n    case 'end':\r\n      return colors.base;\r\n  }\r\n};\r\n\r\nconst getIconSrc = (type: NodeType) => {\r\n  const color = getColor(type);\r\n\r\n  switch (type) {\r\n    case 'source':\r\n      return <DatabaseOutlined className={css.NodeIcon} style={{color}} />;\r\n    case 'email':\r\n      return <MailOutlined className={css.NodeIcon} style={{color}} />;\r\n    case 'sms':\r\n      return <CommentOutlined className={css.NodeIcon} style={{color}} />;\r\n    case 'waitThenCheck':\r\n      return <CheckCircleOutlined className={css.NodeIcon} style={{color}} />;\r\n    case 'end':\r\n      return <FlagOutlined className={css.NodeIcon} style={{color}} />;\r\n  }\r\n};\r\n\r\n// --- Types\r\nexport interface BaseNodeProps extends NodeComponentProps<NodeData> {\r\n  type: NodeType;\r\n  disabled: boolean;\r\n  onNodeClick?: (type: NodeType, data: NodeData) => void;\r\n}\r\n\r\nexport interface NodeData {\r\n  title: ReactNode;\r\n  description: ReactNode;\r\n}\r\n\r\nexport type NodeType = 'source' | 'email' | 'sms' | 'waitThenCheck' | 'end';\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}