{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\"; // TODO: https://www.w3.org/TR/2017/NOTE-wai-aria-practices-1.1-20171214/examples/treeview/treeview-2/treeview-2a.html\n// Fully accessibility support\n\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport warning from \"rc-util/es/warning\";\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport classNames from 'classnames';\nimport { TreeContext } from './contextTypes';\nimport { getDragChildrenKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr } from './util';\nimport { flattenTreeData, convertTreeToData, convertDataToEntities, warningWithoutKey, convertNodePropsToEventData, getTreeNodeProps, fillFieldNames } from './utils/treeUtil';\nimport NodeList, { MOTION_KEY, MotionEntity } from './NodeList';\nimport TreeNode from './TreeNode';\nimport { conductCheck } from './utils/conductUtil';\nimport DropIndicator from './DropIndicator';\nvar MAX_RETRY_TIMES = 10;\n\nvar Tree = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tree, _React$Component);\n\n  var _super = _createSuper(Tree);\n\n  function Tree() {\n    var _this;\n\n    _classCallCheck(this, Tree);\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(_args));\n    _this.destroyed = false;\n    _this.delayedDragEnterLogic = void 0;\n    _this.loadingRetryTimes = {};\n    _this.state = {\n      keyEntities: {},\n      indent: null,\n      selectedKeys: [],\n      checkedKeys: [],\n      halfCheckedKeys: [],\n      loadedKeys: [],\n      loadingKeys: [],\n      expandedKeys: [],\n      draggingNodeKey: null,\n      dragChildrenKeys: [],\n      // dropTargetKey is the key of abstract-drop-node\n      // the abstract-drop-node is the real drop node when drag and drop\n      // not the DOM drag over node\n      dropTargetKey: null,\n      dropPosition: null,\n      dropContainerKey: null,\n      dropLevelOffset: null,\n      dropTargetPos: null,\n      dropAllowed: true,\n      // the abstract-drag-over-node\n      // if mouse is on the bottom of top dom node or no the top of the bottom dom node\n      // abstract-drag-over-node is the top node\n      dragOverNodeKey: null,\n      treeData: [],\n      flattenNodes: [],\n      focused: false,\n      activeKey: null,\n      listChanging: false,\n      prevProps: null,\n      fieldNames: fillFieldNames()\n    };\n    _this.dragStartMousePosition = null;\n    _this.dragNode = void 0;\n    _this.currentMouseOverDroppableNodeKey = null;\n    _this.listRef = /*#__PURE__*/React.createRef();\n\n    _this.onNodeDragStart = function (event, node) {\n      var _this$state = _this.state,\n          expandedKeys = _this$state.expandedKeys,\n          keyEntities = _this$state.keyEntities;\n      var onDragStart = _this.props.onDragStart;\n      var eventKey = node.props.eventKey;\n      _this.dragNode = node;\n      _this.dragStartMousePosition = {\n        x: event.clientX,\n        y: event.clientY\n      };\n      var newExpandedKeys = arrDel(expandedKeys, eventKey);\n\n      _this.setState({\n        draggingNodeKey: eventKey,\n        dragChildrenKeys: getDragChildrenKeys(eventKey, keyEntities),\n        indent: _this.listRef.current.getIndentWidth()\n      });\n\n      _this.setExpandedKeys(newExpandedKeys);\n\n      window.addEventListener('dragend', _this.onWindowDragEnd);\n\n      if (onDragStart) {\n        onDragStart({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n\n    _this.onNodeDragEnter = function (event, node) {\n      var _this$state2 = _this.state,\n          expandedKeys = _this$state2.expandedKeys,\n          keyEntities = _this$state2.keyEntities,\n          dragChildrenKeys = _this$state2.dragChildrenKeys,\n          flattenNodes = _this$state2.flattenNodes,\n          indent = _this$state2.indent;\n      var _this$props = _this.props,\n          onDragEnter = _this$props.onDragEnter,\n          onExpand = _this$props.onExpand,\n          allowDrop = _this$props.allowDrop,\n          direction = _this$props.direction;\n      var _node$props = node.props,\n          pos = _node$props.pos,\n          eventKey = _node$props.eventKey;\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          dragNode = _assertThisInitialize.dragNode; // record the key of node which is latest entered, used in dragleave event.\n\n\n      if (_this.currentMouseOverDroppableNodeKey !== eventKey) {\n        _this.currentMouseOverDroppableNodeKey = eventKey;\n      }\n\n      if (!dragNode) {\n        _this.resetDragState();\n\n        return;\n      }\n\n      var _calcDropPosition = calcDropPosition(event, dragNode, node, indent, _this.dragStartMousePosition, allowDrop, flattenNodes, keyEntities, expandedKeys, direction),\n          dropPosition = _calcDropPosition.dropPosition,\n          dropLevelOffset = _calcDropPosition.dropLevelOffset,\n          dropTargetKey = _calcDropPosition.dropTargetKey,\n          dropContainerKey = _calcDropPosition.dropContainerKey,\n          dropTargetPos = _calcDropPosition.dropTargetPos,\n          dropAllowed = _calcDropPosition.dropAllowed,\n          dragOverNodeKey = _calcDropPosition.dragOverNodeKey;\n\n      if ( // don't allow drop inside its children\n      dragChildrenKeys.indexOf(dropTargetKey) !== -1 || // don't allow drop when drop is not allowed caculated by calcDropPosition\n      !dropAllowed) {\n        _this.resetDragState();\n\n        return;\n      } // Side effect for delay drag\n\n\n      if (!_this.delayedDragEnterLogic) {\n        _this.delayedDragEnterLogic = {};\n      }\n\n      Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n        clearTimeout(_this.delayedDragEnterLogic[key]);\n      });\n\n      if (dragNode.props.eventKey !== node.props.eventKey) {\n        // hoist expand logic here\n        // since if logic is on the bottom\n        // it will be blocked by abstract dragover node check\n        //   => if you dragenter from top, you mouse will still be consider as in the top node\n        event.persist();\n        _this.delayedDragEnterLogic[pos] = window.setTimeout(function () {\n          if (_this.state.draggingNodeKey === null) return;\n\n          var newExpandedKeys = _toConsumableArray(expandedKeys);\n\n          var entity = keyEntities[node.props.eventKey];\n\n          if (entity && (entity.children || []).length) {\n            newExpandedKeys = arrAdd(expandedKeys, node.props.eventKey);\n          }\n\n          if (!('expandedKeys' in _this.props)) {\n            _this.setExpandedKeys(newExpandedKeys);\n          }\n\n          if (onExpand) {\n            onExpand(newExpandedKeys, {\n              node: convertNodePropsToEventData(node.props),\n              expanded: true,\n              nativeEvent: event.nativeEvent\n            });\n          }\n        }, 800);\n      } // Skip if drag node is self\n\n\n      if (dragNode.props.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        _this.resetDragState();\n\n        return;\n      } // Update drag over node and drag state\n\n\n      _this.setState({\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        dropLevelOffset: dropLevelOffset,\n        dropTargetKey: dropTargetKey,\n        dropContainerKey: dropContainerKey,\n        dropTargetPos: dropTargetPos,\n        dropAllowed: dropAllowed\n      });\n\n      if (onDragEnter) {\n        onDragEnter({\n          event: event,\n          node: convertNodePropsToEventData(node.props),\n          expandedKeys: expandedKeys\n        });\n      }\n    };\n\n    _this.onNodeDragOver = function (event, node) {\n      var _this$state3 = _this.state,\n          dragChildrenKeys = _this$state3.dragChildrenKeys,\n          flattenNodes = _this$state3.flattenNodes,\n          keyEntities = _this$state3.keyEntities,\n          expandedKeys = _this$state3.expandedKeys,\n          indent = _this$state3.indent;\n      var _this$props2 = _this.props,\n          onDragOver = _this$props2.onDragOver,\n          allowDrop = _this$props2.allowDrop,\n          direction = _this$props2.direction;\n\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          dragNode = _assertThisInitialize2.dragNode;\n\n      if (!dragNode) {\n        return;\n      }\n\n      var _calcDropPosition2 = calcDropPosition(event, dragNode, node, indent, _this.dragStartMousePosition, allowDrop, flattenNodes, keyEntities, expandedKeys, direction),\n          dropPosition = _calcDropPosition2.dropPosition,\n          dropLevelOffset = _calcDropPosition2.dropLevelOffset,\n          dropTargetKey = _calcDropPosition2.dropTargetKey,\n          dropContainerKey = _calcDropPosition2.dropContainerKey,\n          dropAllowed = _calcDropPosition2.dropAllowed,\n          dropTargetPos = _calcDropPosition2.dropTargetPos,\n          dragOverNodeKey = _calcDropPosition2.dragOverNodeKey;\n\n      if (dragChildrenKeys.indexOf(dropTargetKey) !== -1 || !dropAllowed) {\n        // don't allow drop inside its children\n        // don't allow drop when drop is not allowed caculated by calcDropPosition\n        return;\n      } // Update drag position\n\n\n      if (dragNode.props.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        if (!(_this.state.dropPosition === null && _this.state.dropLevelOffset === null && _this.state.dropTargetKey === null && _this.state.dropContainerKey === null && _this.state.dropTargetPos === null && _this.state.dropAllowed === false && _this.state.dragOverNodeKey === null)) {\n          _this.resetDragState();\n        }\n      } else if (!(dropPosition === _this.state.dropPosition && dropLevelOffset === _this.state.dropLevelOffset && dropTargetKey === _this.state.dropTargetKey && dropContainerKey === _this.state.dropContainerKey && dropTargetPos === _this.state.dropTargetPos && dropAllowed === _this.state.dropAllowed && dragOverNodeKey === _this.state.dragOverNodeKey)) {\n        _this.setState({\n          dropPosition: dropPosition,\n          dropLevelOffset: dropLevelOffset,\n          dropTargetKey: dropTargetKey,\n          dropContainerKey: dropContainerKey,\n          dropTargetPos: dropTargetPos,\n          dropAllowed: dropAllowed,\n          dragOverNodeKey: dragOverNodeKey\n        });\n      }\n\n      if (onDragOver) {\n        onDragOver({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n\n    _this.onNodeDragLeave = function (event, node) {\n      // if it is outside the droppable area\n      // currentMouseOverDroppableNodeKey will be updated in dragenter event when into another droppable receiver.\n      if (_this.currentMouseOverDroppableNodeKey === node.props.eventKey && !event.currentTarget.contains(event.relatedTarget)) {\n        _this.resetDragState();\n\n        _this.currentMouseOverDroppableNodeKey = null;\n      }\n\n      var onDragLeave = _this.props.onDragLeave;\n\n      if (onDragLeave) {\n        onDragLeave({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n\n    _this.onWindowDragEnd = function (event) {\n      _this.onNodeDragEnd(event, null, true);\n\n      window.removeEventListener('dragend', _this.onWindowDragEnd);\n    };\n\n    _this.onNodeDragEnd = function (event, node) {\n      var outsideTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var onDragEnd = _this.props.onDragEnd;\n\n      _this.setState({\n        dragOverNodeKey: null\n      });\n\n      _this.cleanDragState();\n\n      if (onDragEnd && !outsideTree) {\n        onDragEnd({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.onNodeDrop = function (event, node) {\n      var _this$getActiveItem;\n\n      var outsideTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var _this$state4 = _this.state,\n          dragChildrenKeys = _this$state4.dragChildrenKeys,\n          dropPosition = _this$state4.dropPosition,\n          dropTargetKey = _this$state4.dropTargetKey,\n          dropTargetPos = _this$state4.dropTargetPos,\n          dropAllowed = _this$state4.dropAllowed;\n      if (!dropAllowed) return;\n      var onDrop = _this.props.onDrop;\n\n      _this.setState({\n        dragOverNodeKey: null\n      });\n\n      _this.cleanDragState();\n\n      if (dropTargetKey === null) return;\n\n      var abstractDropNodeProps = _objectSpread(_objectSpread({}, getTreeNodeProps(dropTargetKey, _this.getTreeNodeRequiredProps())), {}, {\n        active: ((_this$getActiveItem = _this.getActiveItem()) === null || _this$getActiveItem === void 0 ? void 0 : _this$getActiveItem.data.key) === dropTargetKey,\n        data: _this.state.keyEntities[dropTargetKey].node\n      });\n\n      var dropToChild = dragChildrenKeys.indexOf(dropTargetKey) !== -1;\n      warning(!dropToChild, \"Can not drop to dragNode's children node. This is a bug of rc-tree. Please report an issue.\");\n      var posArr = posToArr(dropTargetPos);\n      var dropResult = {\n        event: event,\n        node: convertNodePropsToEventData(abstractDropNodeProps),\n        dragNode: _this.dragNode ? convertNodePropsToEventData(_this.dragNode.props) : null,\n        dragNodesKeys: [_this.dragNode.props.eventKey].concat(dragChildrenKeys),\n        dropToGap: dropPosition !== 0,\n        dropPosition: dropPosition + Number(posArr[posArr.length - 1])\n      };\n\n      if (onDrop && !outsideTree) {\n        onDrop(dropResult);\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.cleanDragState = function () {\n      var draggingNodeKey = _this.state.draggingNodeKey;\n\n      if (draggingNodeKey !== null) {\n        _this.setState({\n          draggingNodeKey: null,\n          dropPosition: null,\n          dropContainerKey: null,\n          dropTargetKey: null,\n          dropLevelOffset: null,\n          dropAllowed: true,\n          dragOverNodeKey: null\n        });\n      }\n\n      _this.dragStartMousePosition = null;\n      _this.currentMouseOverDroppableNodeKey = null;\n    };\n\n    _this.onNodeClick = function (e, treeNode) {\n      var onClick = _this.props.onClick;\n\n      if (onClick) {\n        onClick(e, treeNode);\n      }\n    };\n\n    _this.onNodeDoubleClick = function (e, treeNode) {\n      var onDoubleClick = _this.props.onDoubleClick;\n\n      if (onDoubleClick) {\n        onDoubleClick(e, treeNode);\n      }\n    };\n\n    _this.onNodeSelect = function (e, treeNode) {\n      var selectedKeys = _this.state.selectedKeys;\n      var _this$state5 = _this.state,\n          keyEntities = _this$state5.keyEntities,\n          fieldNames = _this$state5.fieldNames;\n      var _this$props3 = _this.props,\n          onSelect = _this$props3.onSelect,\n          multiple = _this$props3.multiple;\n      var selected = treeNode.selected;\n      var key = treeNode[fieldNames.key];\n      var targetSelected = !selected; // Update selected keys\n\n      if (!targetSelected) {\n        selectedKeys = arrDel(selectedKeys, key);\n      } else if (!multiple) {\n        selectedKeys = [key];\n      } else {\n        selectedKeys = arrAdd(selectedKeys, key);\n      } // [Legacy] Not found related usage in doc or upper libs\n\n\n      var selectedNodes = selectedKeys.map(function (selectedKey) {\n        var entity = keyEntities[selectedKey];\n        if (!entity) return null;\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n\n      _this.setUncontrolledState({\n        selectedKeys: selectedKeys\n      });\n\n      if (onSelect) {\n        onSelect(selectedKeys, {\n          event: 'select',\n          selected: targetSelected,\n          node: treeNode,\n          selectedNodes: selectedNodes,\n          nativeEvent: e.nativeEvent\n        });\n      }\n    };\n\n    _this.onNodeCheck = function (e, treeNode, checked) {\n      var _this$state6 = _this.state,\n          keyEntities = _this$state6.keyEntities,\n          oriCheckedKeys = _this$state6.checkedKeys,\n          oriHalfCheckedKeys = _this$state6.halfCheckedKeys;\n      var _this$props4 = _this.props,\n          checkStrictly = _this$props4.checkStrictly,\n          onCheck = _this$props4.onCheck;\n      var key = treeNode.key; // Prepare trigger arguments\n\n      var checkedObj;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e.nativeEvent\n      };\n\n      if (checkStrictly) {\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, key) : arrDel(oriCheckedKeys, key);\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, key);\n        checkedObj = {\n          checked: checkedKeys,\n          halfChecked: halfCheckedKeys\n        };\n        eventObj.checkedNodes = checkedKeys.map(function (checkedKey) {\n          return keyEntities[checkedKey];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: checkedKeys\n        });\n      } else {\n        // Always fill first\n        var _conductCheck = conductCheck([].concat(_toConsumableArray(oriCheckedKeys), [key]), true, keyEntities),\n            _checkedKeys = _conductCheck.checkedKeys,\n            _halfCheckedKeys = _conductCheck.halfCheckedKeys; // If remove, we do it again to correction\n\n\n        if (!checked) {\n          var keySet = new Set(_checkedKeys);\n          keySet.delete(key);\n\n          var _conductCheck2 = conductCheck(Array.from(keySet), {\n            checked: false,\n            halfCheckedKeys: _halfCheckedKeys\n          }, keyEntities);\n\n          _checkedKeys = _conductCheck2.checkedKeys;\n          _halfCheckedKeys = _conductCheck2.halfCheckedKeys;\n        }\n\n        checkedObj = _checkedKeys; // [Legacy] This is used for `rc-tree-select`\n\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\n\n        _checkedKeys.forEach(function (checkedKey) {\n          var entity = keyEntities[checkedKey];\n          if (!entity) return;\n          var node = entity.node,\n              pos = entity.pos;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: _checkedKeys\n        }, false, {\n          halfCheckedKeys: _halfCheckedKeys\n        });\n      }\n\n      if (onCheck) {\n        onCheck(checkedObj, eventObj);\n      }\n    };\n\n    _this.onNodeLoad = function (treeNode) {\n      var key = treeNode.key;\n      var loadPromise = new Promise(function (resolve, reject) {\n        // We need to get the latest state of loading/loaded keys\n        _this.setState(function (_ref) {\n          var _ref$loadedKeys = _ref.loadedKeys,\n              loadedKeys = _ref$loadedKeys === void 0 ? [] : _ref$loadedKeys,\n              _ref$loadingKeys = _ref.loadingKeys,\n              loadingKeys = _ref$loadingKeys === void 0 ? [] : _ref$loadingKeys;\n          var _this$props5 = _this.props,\n              loadData = _this$props5.loadData,\n              onLoad = _this$props5.onLoad;\n\n          if (!loadData || loadedKeys.indexOf(key) !== -1 || loadingKeys.indexOf(key) !== -1) {\n            return null;\n          } // Process load data\n\n\n          var promise = loadData(treeNode);\n          promise.then(function () {\n            var currentLoadedKeys = _this.state.loadedKeys;\n            var newLoadedKeys = arrAdd(currentLoadedKeys, key); // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n            // https://github.com/ant-design/ant-design/issues/12464\n\n            if (onLoad) {\n              onLoad(newLoadedKeys, {\n                event: 'load',\n                node: treeNode\n              });\n            }\n\n            _this.setUncontrolledState({\n              loadedKeys: newLoadedKeys\n            });\n\n            _this.setState(function (prevState) {\n              return {\n                loadingKeys: arrDel(prevState.loadingKeys, key)\n              };\n            });\n\n            resolve();\n          }).catch(function (e) {\n            _this.setState(function (prevState) {\n              return {\n                loadingKeys: arrDel(prevState.loadingKeys, key)\n              };\n            }); // If exceed max retry times, we give up retry\n\n\n            _this.loadingRetryTimes[key] = (_this.loadingRetryTimes[key] || 0) + 1;\n\n            if (_this.loadingRetryTimes[key] >= MAX_RETRY_TIMES) {\n              var currentLoadedKeys = _this.state.loadedKeys;\n              warning(false, 'Retry for `loadData` many times but still failed. No more retry.');\n\n              _this.setUncontrolledState({\n                loadedKeys: arrAdd(currentLoadedKeys, key)\n              });\n\n              resolve();\n            }\n\n            reject(e);\n          });\n          return {\n            loadingKeys: arrAdd(loadingKeys, key)\n          };\n        });\n      }); // Not care warning if we ignore this\n\n      loadPromise.catch(function () {});\n      return loadPromise;\n    };\n\n    _this.onNodeMouseEnter = function (event, node) {\n      var onMouseEnter = _this.props.onMouseEnter;\n\n      if (onMouseEnter) {\n        onMouseEnter({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeMouseLeave = function (event, node) {\n      var onMouseLeave = _this.props.onMouseLeave;\n\n      if (onMouseLeave) {\n        onMouseLeave({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeContextMenu = function (event, node) {\n      var onRightClick = _this.props.onRightClick;\n\n      if (onRightClick) {\n        event.preventDefault();\n        onRightClick({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onFocus = function () {\n      var onFocus = _this.props.onFocus;\n\n      _this.setState({\n        focused: true\n      });\n\n      if (onFocus) {\n        onFocus.apply(void 0, arguments);\n      }\n    };\n\n    _this.onBlur = function () {\n      var onBlur = _this.props.onBlur;\n\n      _this.setState({\n        focused: false\n      });\n\n      _this.onActiveChange(null);\n\n      if (onBlur) {\n        onBlur.apply(void 0, arguments);\n      }\n    };\n\n    _this.getTreeNodeRequiredProps = function () {\n      var _this$state7 = _this.state,\n          expandedKeys = _this$state7.expandedKeys,\n          selectedKeys = _this$state7.selectedKeys,\n          loadedKeys = _this$state7.loadedKeys,\n          loadingKeys = _this$state7.loadingKeys,\n          checkedKeys = _this$state7.checkedKeys,\n          halfCheckedKeys = _this$state7.halfCheckedKeys,\n          dragOverNodeKey = _this$state7.dragOverNodeKey,\n          dropPosition = _this$state7.dropPosition,\n          keyEntities = _this$state7.keyEntities;\n      return {\n        expandedKeys: expandedKeys || [],\n        selectedKeys: selectedKeys || [],\n        loadedKeys: loadedKeys || [],\n        loadingKeys: loadingKeys || [],\n        checkedKeys: checkedKeys || [],\n        halfCheckedKeys: halfCheckedKeys || [],\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        keyEntities: keyEntities\n      };\n    };\n\n    _this.setExpandedKeys = function (expandedKeys) {\n      var _this$state8 = _this.state,\n          treeData = _this$state8.treeData,\n          fieldNames = _this$state8.fieldNames;\n      var flattenNodes = flattenTreeData(treeData, expandedKeys, fieldNames);\n\n      _this.setUncontrolledState({\n        expandedKeys: expandedKeys,\n        flattenNodes: flattenNodes\n      }, true);\n    };\n\n    _this.onNodeExpand = function (e, treeNode) {\n      var expandedKeys = _this.state.expandedKeys;\n      var _this$state9 = _this.state,\n          listChanging = _this$state9.listChanging,\n          fieldNames = _this$state9.fieldNames;\n      var _this$props6 = _this.props,\n          onExpand = _this$props6.onExpand,\n          loadData = _this$props6.loadData;\n      var expanded = treeNode.expanded;\n      var key = treeNode[fieldNames.key]; // Do nothing when motion is in progress\n\n      if (listChanging) {\n        return;\n      } // Update selected keys\n\n\n      var index = expandedKeys.indexOf(key);\n      var targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n\n      if (targetExpanded) {\n        expandedKeys = arrAdd(expandedKeys, key);\n      } else {\n        expandedKeys = arrDel(expandedKeys, key);\n      }\n\n      _this.setExpandedKeys(expandedKeys);\n\n      if (onExpand) {\n        onExpand(expandedKeys, {\n          node: treeNode,\n          expanded: targetExpanded,\n          nativeEvent: e.nativeEvent\n        });\n      } // Async Load data\n\n\n      if (targetExpanded && loadData) {\n        var loadPromise = _this.onNodeLoad(treeNode);\n\n        if (loadPromise) {\n          loadPromise.then(function () {\n            // [Legacy] Refresh logic\n            var newFlattenTreeData = flattenTreeData(_this.state.treeData, expandedKeys, fieldNames);\n\n            _this.setUncontrolledState({\n              flattenNodes: newFlattenTreeData\n            });\n          }).catch(function () {\n            var currentExpandedKeys = _this.state.expandedKeys;\n            var expandedKeysToRestore = arrDel(currentExpandedKeys, key);\n\n            _this.setExpandedKeys(expandedKeysToRestore);\n          });\n        }\n      }\n    };\n\n    _this.onListChangeStart = function () {\n      _this.setUncontrolledState({\n        listChanging: true\n      });\n    };\n\n    _this.onListChangeEnd = function () {\n      setTimeout(function () {\n        _this.setUncontrolledState({\n          listChanging: false\n        });\n      });\n    };\n\n    _this.onActiveChange = function (newActiveKey) {\n      var activeKey = _this.state.activeKey;\n      var onActiveChange = _this.props.onActiveChange;\n\n      if (activeKey === newActiveKey) {\n        return;\n      }\n\n      _this.setState({\n        activeKey: newActiveKey\n      });\n\n      if (newActiveKey !== null) {\n        _this.scrollTo({\n          key: newActiveKey\n        });\n      }\n\n      if (onActiveChange) {\n        onActiveChange(newActiveKey);\n      }\n    };\n\n    _this.getActiveItem = function () {\n      var _this$state10 = _this.state,\n          activeKey = _this$state10.activeKey,\n          flattenNodes = _this$state10.flattenNodes;\n\n      if (activeKey === null) {\n        return null;\n      }\n\n      return flattenNodes.find(function (_ref2) {\n        var key = _ref2.key;\n        return key === activeKey;\n      }) || null;\n    };\n\n    _this.offsetActiveKey = function (offset) {\n      var _this$state11 = _this.state,\n          flattenNodes = _this$state11.flattenNodes,\n          activeKey = _this$state11.activeKey;\n      var index = flattenNodes.findIndex(function (_ref3) {\n        var key = _ref3.key;\n        return key === activeKey;\n      }); // Align with index\n\n      if (index === -1 && offset < 0) {\n        index = flattenNodes.length;\n      }\n\n      index = (index + offset + flattenNodes.length) % flattenNodes.length;\n      var item = flattenNodes[index];\n\n      if (item) {\n        var key = item.key;\n\n        _this.onActiveChange(key);\n      } else {\n        _this.onActiveChange(null);\n      }\n    };\n\n    _this.onKeyDown = function (event) {\n      var _this$state12 = _this.state,\n          activeKey = _this$state12.activeKey,\n          expandedKeys = _this$state12.expandedKeys,\n          checkedKeys = _this$state12.checkedKeys;\n      var _this$props7 = _this.props,\n          onKeyDown = _this$props7.onKeyDown,\n          checkable = _this$props7.checkable,\n          selectable = _this$props7.selectable; // >>>>>>>>>> Direction\n\n      switch (event.which) {\n        case KeyCode.UP:\n          {\n            _this.offsetActiveKey(-1);\n\n            event.preventDefault();\n            break;\n          }\n\n        case KeyCode.DOWN:\n          {\n            _this.offsetActiveKey(1);\n\n            event.preventDefault();\n            break;\n          }\n      } // >>>>>>>>>> Expand & Selection\n\n\n      var activeItem = _this.getActiveItem();\n\n      if (activeItem && activeItem.data) {\n        var treeNodeRequiredProps = _this.getTreeNodeRequiredProps();\n\n        var expandable = activeItem.data.isLeaf === false || !!(activeItem.data.children || []).length;\n        var eventNode = convertNodePropsToEventData(_objectSpread(_objectSpread({}, getTreeNodeProps(activeKey, treeNodeRequiredProps)), {}, {\n          data: activeItem.data,\n          active: true\n        }));\n\n        switch (event.which) {\n          // >>> Expand\n          case KeyCode.LEFT:\n            {\n              // Collapse if possible\n              if (expandable && expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.parent) {\n                _this.onActiveChange(activeItem.parent.data.key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n\n          case KeyCode.RIGHT:\n            {\n              // Expand if possible\n              if (expandable && !expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.children && activeItem.children.length) {\n                _this.onActiveChange(activeItem.children[0].data.key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n          // Selection\n\n          case KeyCode.ENTER:\n          case KeyCode.SPACE:\n            {\n              if (checkable && !eventNode.disabled && eventNode.checkable !== false && !eventNode.disableCheckbox) {\n                _this.onNodeCheck({}, eventNode, !checkedKeys.includes(activeKey));\n              } else if (!checkable && selectable && !eventNode.disabled && eventNode.selectable !== false) {\n                _this.onNodeSelect({}, eventNode);\n              }\n\n              break;\n            }\n        }\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event);\n      }\n    };\n\n    _this.setUncontrolledState = function (state) {\n      var atomic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var forceState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      if (!_this.destroyed) {\n        var needSync = false;\n        var allPassed = true;\n        var newState = {};\n        Object.keys(state).forEach(function (name) {\n          if (name in _this.props) {\n            allPassed = false;\n            return;\n          }\n\n          needSync = true;\n          newState[name] = state[name];\n        });\n\n        if (needSync && (!atomic || allPassed)) {\n          _this.setState(_objectSpread(_objectSpread({}, newState), forceState));\n        }\n      }\n    };\n\n    _this.scrollTo = function (scroll) {\n      _this.listRef.current.scrollTo(scroll);\n    };\n\n    return _this;\n  }\n\n  _createClass(Tree, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('dragend', this.onWindowDragEnd);\n      this.destroyed = true;\n    }\n  }, {\n    key: \"resetDragState\",\n    value: function resetDragState() {\n      this.setState({\n        dragOverNodeKey: null,\n        dropPosition: null,\n        dropLevelOffset: null,\n        dropTargetKey: null,\n        dropContainerKey: null,\n        dropTargetPos: null,\n        dropAllowed: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var _this$state13 = this.state,\n          focused = _this$state13.focused,\n          flattenNodes = _this$state13.flattenNodes,\n          keyEntities = _this$state13.keyEntities,\n          draggingNodeKey = _this$state13.draggingNodeKey,\n          activeKey = _this$state13.activeKey,\n          dropLevelOffset = _this$state13.dropLevelOffset,\n          dropContainerKey = _this$state13.dropContainerKey,\n          dropTargetKey = _this$state13.dropTargetKey,\n          dropPosition = _this$state13.dropPosition,\n          dragOverNodeKey = _this$state13.dragOverNodeKey,\n          indent = _this$state13.indent;\n      var _this$props8 = this.props,\n          prefixCls = _this$props8.prefixCls,\n          className = _this$props8.className,\n          style = _this$props8.style,\n          showLine = _this$props8.showLine,\n          focusable = _this$props8.focusable,\n          _this$props8$tabIndex = _this$props8.tabIndex,\n          tabIndex = _this$props8$tabIndex === void 0 ? 0 : _this$props8$tabIndex,\n          selectable = _this$props8.selectable,\n          showIcon = _this$props8.showIcon,\n          icon = _this$props8.icon,\n          switcherIcon = _this$props8.switcherIcon,\n          draggable = _this$props8.draggable,\n          checkable = _this$props8.checkable,\n          checkStrictly = _this$props8.checkStrictly,\n          disabled = _this$props8.disabled,\n          motion = _this$props8.motion,\n          loadData = _this$props8.loadData,\n          filterTreeNode = _this$props8.filterTreeNode,\n          height = _this$props8.height,\n          itemHeight = _this$props8.itemHeight,\n          virtual = _this$props8.virtual,\n          titleRender = _this$props8.titleRender,\n          dropIndicatorRender = _this$props8.dropIndicatorRender,\n          onContextMenu = _this$props8.onContextMenu,\n          onScroll = _this$props8.onScroll,\n          direction = _this$props8.direction;\n      var domProps = pickAttrs(this.props, {\n        aria: true,\n        data: true\n      }); // It's better move to hooks but we just simply keep here\n\n      var draggableConfig;\n\n      if (draggable) {\n        if (_typeof(draggable) === 'object') {\n          draggableConfig = draggable;\n        } else if (typeof draggable === 'function') {\n          draggableConfig = {\n            nodeDraggable: draggable\n          };\n        } else {\n          draggableConfig = {};\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(TreeContext.Provider, {\n        value: {\n          prefixCls: prefixCls,\n          selectable: selectable,\n          showIcon: showIcon,\n          icon: icon,\n          switcherIcon: switcherIcon,\n          draggable: draggableConfig,\n          draggingNodeKey: draggingNodeKey,\n          checkable: checkable,\n          checkStrictly: checkStrictly,\n          disabled: disabled,\n          keyEntities: keyEntities,\n          dropLevelOffset: dropLevelOffset,\n          dropContainerKey: dropContainerKey,\n          dropTargetKey: dropTargetKey,\n          dropPosition: dropPosition,\n          dragOverNodeKey: dragOverNodeKey,\n          indent: indent,\n          direction: direction,\n          dropIndicatorRender: dropIndicatorRender,\n          loadData: loadData,\n          filterTreeNode: filterTreeNode,\n          titleRender: titleRender,\n          onNodeClick: this.onNodeClick,\n          onNodeDoubleClick: this.onNodeDoubleClick,\n          onNodeExpand: this.onNodeExpand,\n          onNodeSelect: this.onNodeSelect,\n          onNodeCheck: this.onNodeCheck,\n          onNodeLoad: this.onNodeLoad,\n          onNodeMouseEnter: this.onNodeMouseEnter,\n          onNodeMouseLeave: this.onNodeMouseLeave,\n          onNodeContextMenu: this.onNodeContextMenu,\n          onNodeDragStart: this.onNodeDragStart,\n          onNodeDragEnter: this.onNodeDragEnter,\n          onNodeDragOver: this.onNodeDragOver,\n          onNodeDragLeave: this.onNodeDragLeave,\n          onNodeDragEnd: this.onNodeDragEnd,\n          onNodeDrop: this.onNodeDrop\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        role: \"tree\",\n        className: classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-show-line\"), showLine), _defineProperty(_classNames, \"\".concat(prefixCls, \"-focused\"), focused), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active-focused\"), activeKey !== null), _classNames))\n      }, /*#__PURE__*/React.createElement(NodeList, _extends({\n        ref: this.listRef,\n        prefixCls: prefixCls,\n        style: style,\n        data: flattenNodes,\n        disabled: disabled,\n        selectable: selectable,\n        checkable: !!checkable,\n        motion: motion,\n        dragging: draggingNodeKey !== null,\n        height: height,\n        itemHeight: itemHeight,\n        virtual: virtual,\n        focusable: focusable,\n        focused: focused,\n        tabIndex: tabIndex,\n        activeItem: this.getActiveItem(),\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        onKeyDown: this.onKeyDown,\n        onActiveChange: this.onActiveChange,\n        onListChangeStart: this.onListChangeStart,\n        onListChangeEnd: this.onListChangeEnd,\n        onContextMenu: onContextMenu,\n        onScroll: onScroll\n      }, this.getTreeNodeRequiredProps(), domProps))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, prevState) {\n      var prevProps = prevState.prevProps;\n      var newState = {\n        prevProps: props\n      };\n\n      function needSync(name) {\n        return !prevProps && name in props || prevProps && prevProps[name] !== props[name];\n      } // ================== Tree Node ==================\n\n\n      var treeData; // fieldNames\n\n      var fieldNames = prevState.fieldNames;\n\n      if (needSync('fieldNames')) {\n        fieldNames = fillFieldNames(props.fieldNames);\n        newState.fieldNames = fieldNames;\n      } // Check if `treeData` or `children` changed and save into the state.\n\n\n      if (needSync('treeData')) {\n        treeData = props.treeData;\n      } else if (needSync('children')) {\n        warning(false, '`children` of Tree is deprecated. Please use `treeData` instead.');\n        treeData = convertTreeToData(props.children);\n      } // Save flatten nodes info and convert `treeData` into keyEntities\n\n\n      if (treeData) {\n        newState.treeData = treeData;\n        var entitiesMap = convertDataToEntities(treeData, {\n          fieldNames: fieldNames\n        });\n        newState.keyEntities = _objectSpread(_defineProperty({}, MOTION_KEY, MotionEntity), entitiesMap.keyEntities); // Warning if treeNode not provide key\n\n        if (process.env.NODE_ENV !== 'production') {\n          warningWithoutKey(treeData, fieldNames);\n        }\n      }\n\n      var keyEntities = newState.keyEntities || prevState.keyEntities; // ================ expandedKeys =================\n\n      if (needSync('expandedKeys') || prevProps && needSync('autoExpandParent')) {\n        newState.expandedKeys = props.autoExpandParent || !prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n      } else if (!prevProps && props.defaultExpandAll) {\n        var cloneKeyEntities = _objectSpread({}, keyEntities);\n\n        delete cloneKeyEntities[MOTION_KEY];\n        newState.expandedKeys = Object.keys(cloneKeyEntities).map(function (key) {\n          return cloneKeyEntities[key].key;\n        });\n      } else if (!prevProps && props.defaultExpandedKeys) {\n        newState.expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n      }\n\n      if (!newState.expandedKeys) {\n        delete newState.expandedKeys;\n      } // ================ flattenNodes =================\n\n\n      if (treeData || newState.expandedKeys) {\n        var flattenNodes = flattenTreeData(treeData || prevState.treeData, newState.expandedKeys || prevState.expandedKeys, fieldNames);\n        newState.flattenNodes = flattenNodes;\n      } // ================ selectedKeys =================\n\n\n      if (props.selectable) {\n        if (needSync('selectedKeys')) {\n          newState.selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!prevProps && props.defaultSelectedKeys) {\n          newState.selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      } // ================= checkedKeys =================\n\n\n      if (props.checkable) {\n        var checkedKeyEntity;\n\n        if (needSync('checkedKeys')) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!prevProps && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeData) {\n          // If `treeData` changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: prevState.checkedKeys,\n            halfCheckedKeys: prevState.halfCheckedKeys\n          };\n        }\n\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n              _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n              checkedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\n              _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n              halfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\n\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n            checkedKeys = conductKeys.checkedKeys;\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n\n          newState.checkedKeys = checkedKeys;\n          newState.halfCheckedKeys = halfCheckedKeys;\n        }\n      } // ================= loadedKeys ==================\n\n\n      if (needSync('loadedKeys')) {\n        newState.loadedKeys = props.loadedKeys;\n      }\n\n      return newState;\n    }\n  }]);\n\n  return Tree;\n}(React.Component);\n\nTree.defaultProps = {\n  prefixCls: 'rc-tree',\n  showLine: false,\n  showIcon: true,\n  selectable: true,\n  multiple: false,\n  checkable: false,\n  disabled: false,\n  checkStrictly: false,\n  draggable: false,\n  defaultExpandParent: true,\n  autoExpandParent: false,\n  defaultExpandAll: false,\n  defaultExpandedKeys: [],\n  defaultCheckedKeys: [],\n  defaultSelectedKeys: [],\n  dropIndicatorRender: DropIndicator,\n  allowDrop: function allowDrop() {\n    return true;\n  }\n};\nTree.TreeNode = TreeNode;\nexport default Tree;","map":{"version":3,"names":["_extends","_defineProperty","_typeof","_objectSpread","_toConsumableArray","_classCallCheck","_createClass","_assertThisInitialized","_inherits","_createSuper","React","KeyCode","warning","pickAttrs","classNames","TreeContext","getDragChildrenKeys","parseCheckedKeys","conductExpandParent","calcSelectedKeys","calcDropPosition","arrAdd","arrDel","posToArr","flattenTreeData","convertTreeToData","convertDataToEntities","warningWithoutKey","convertNodePropsToEventData","getTreeNodeProps","fillFieldNames","NodeList","MOTION_KEY","MotionEntity","TreeNode","conductCheck","DropIndicator","MAX_RETRY_TIMES","Tree","_React$Component","_super","_this","_len","arguments","length","_args","Array","_key","call","apply","concat","destroyed","delayedDragEnterLogic","loadingRetryTimes","state","keyEntities","indent","selectedKeys","checkedKeys","halfCheckedKeys","loadedKeys","loadingKeys","expandedKeys","draggingNodeKey","dragChildrenKeys","dropTargetKey","dropPosition","dropContainerKey","dropLevelOffset","dropTargetPos","dropAllowed","dragOverNodeKey","treeData","flattenNodes","focused","activeKey","listChanging","prevProps","fieldNames","dragStartMousePosition","dragNode","currentMouseOverDroppableNodeKey","listRef","createRef","onNodeDragStart","event","node","_this$state","onDragStart","props","eventKey","x","clientX","y","clientY","newExpandedKeys","setState","current","getIndentWidth","setExpandedKeys","window","addEventListener","onWindowDragEnd","onNodeDragEnter","_this$state2","_this$props","onDragEnter","onExpand","allowDrop","direction","_node$props","pos","_assertThisInitialize","resetDragState","_calcDropPosition","indexOf","Object","keys","forEach","key","clearTimeout","persist","setTimeout","entity","children","expanded","nativeEvent","onNodeDragOver","_this$state3","_this$props2","onDragOver","_assertThisInitialize2","_calcDropPosition2","onNodeDragLeave","currentTarget","contains","relatedTarget","onDragLeave","onNodeDragEnd","removeEventListener","outsideTree","undefined","onDragEnd","cleanDragState","onNodeDrop","_this$getActiveItem","_this$state4","onDrop","abstractDropNodeProps","getTreeNodeRequiredProps","active","getActiveItem","data","dropToChild","posArr","dropResult","dragNodesKeys","dropToGap","Number","onNodeClick","e","treeNode","onClick","onNodeDoubleClick","onDoubleClick","onNodeSelect","_this$state5","_this$props3","onSelect","multiple","selected","targetSelected","selectedNodes","map","selectedKey","filter","setUncontrolledState","onNodeCheck","checked","_this$state6","oriCheckedKeys","oriHalfCheckedKeys","_this$props4","checkStrictly","onCheck","checkedObj","eventObj","halfChecked","checkedNodes","checkedKey","_conductCheck","_checkedKeys","_halfCheckedKeys","keySet","Set","delete","_conductCheck2","from","checkedNodesPositions","push","onNodeLoad","loadPromise","Promise","resolve","reject","_ref","_ref$loadedKeys","_ref$loadingKeys","_this$props5","loadData","onLoad","promise","then","currentLoadedKeys","newLoadedKeys","prevState","catch","onNodeMouseEnter","onMouseEnter","onNodeMouseLeave","onMouseLeave","onNodeContextMenu","onRightClick","preventDefault","onFocus","onBlur","onActiveChange","_this$state7","_this$state8","onNodeExpand","_this$state9","_this$props6","index","targetExpanded","newFlattenTreeData","currentExpandedKeys","expandedKeysToRestore","onListChangeStart","onListChangeEnd","newActiveKey","scrollTo","_this$state10","find","_ref2","offsetActiveKey","offset","_this$state11","findIndex","_ref3","item","onKeyDown","_this$state12","_this$props7","checkable","selectable","which","UP","DOWN","activeItem","treeNodeRequiredProps","expandable","isLeaf","eventNode","LEFT","includes","parent","RIGHT","ENTER","SPACE","disabled","disableCheckbox","atomic","forceState","needSync","allPassed","newState","name","scroll","value","componentWillUnmount","render","_classNames","_this$state13","_this$props8","prefixCls","className","style","showLine","focusable","_this$props8$tabIndex","tabIndex","showIcon","icon","switcherIcon","draggable","motion","filterTreeNode","height","itemHeight","virtual","titleRender","dropIndicatorRender","onContextMenu","onScroll","domProps","aria","draggableConfig","nodeDraggable","createElement","Provider","role","ref","dragging","getDerivedStateFromProps","entitiesMap","process","env","NODE_ENV","autoExpandParent","defaultExpandParent","defaultExpandAll","cloneKeyEntities","defaultExpandedKeys","defaultSelectedKeys","checkedKeyEntity","defaultCheckedKeys","_checkedKeyEntity","_checkedKeyEntity$che","_checkedKeyEntity$hal","conductKeys","Component","defaultProps"],"sources":["/project/React-Flow-Automation/node_modules/rc-tree/es/Tree.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\n// TODO: https://www.w3.org/TR/2017/NOTE-wai-aria-practices-1.1-20171214/examples/treeview/treeview-2/treeview-2a.html\n// Fully accessibility support\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport warning from \"rc-util/es/warning\";\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport classNames from 'classnames';\nimport { TreeContext } from './contextTypes';\nimport { getDragChildrenKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr } from './util';\nimport { flattenTreeData, convertTreeToData, convertDataToEntities, warningWithoutKey, convertNodePropsToEventData, getTreeNodeProps, fillFieldNames } from './utils/treeUtil';\nimport NodeList, { MOTION_KEY, MotionEntity } from './NodeList';\nimport TreeNode from './TreeNode';\nimport { conductCheck } from './utils/conductUtil';\nimport DropIndicator from './DropIndicator';\nvar MAX_RETRY_TIMES = 10;\n\nvar Tree = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tree, _React$Component);\n\n  var _super = _createSuper(Tree);\n\n  function Tree() {\n    var _this;\n\n    _classCallCheck(this, Tree);\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(_args));\n    _this.destroyed = false;\n    _this.delayedDragEnterLogic = void 0;\n    _this.loadingRetryTimes = {};\n    _this.state = {\n      keyEntities: {},\n      indent: null,\n      selectedKeys: [],\n      checkedKeys: [],\n      halfCheckedKeys: [],\n      loadedKeys: [],\n      loadingKeys: [],\n      expandedKeys: [],\n      draggingNodeKey: null,\n      dragChildrenKeys: [],\n      // dropTargetKey is the key of abstract-drop-node\n      // the abstract-drop-node is the real drop node when drag and drop\n      // not the DOM drag over node\n      dropTargetKey: null,\n      dropPosition: null,\n      dropContainerKey: null,\n      dropLevelOffset: null,\n      dropTargetPos: null,\n      dropAllowed: true,\n      // the abstract-drag-over-node\n      // if mouse is on the bottom of top dom node or no the top of the bottom dom node\n      // abstract-drag-over-node is the top node\n      dragOverNodeKey: null,\n      treeData: [],\n      flattenNodes: [],\n      focused: false,\n      activeKey: null,\n      listChanging: false,\n      prevProps: null,\n      fieldNames: fillFieldNames()\n    };\n    _this.dragStartMousePosition = null;\n    _this.dragNode = void 0;\n    _this.currentMouseOverDroppableNodeKey = null;\n    _this.listRef = /*#__PURE__*/React.createRef();\n\n    _this.onNodeDragStart = function (event, node) {\n      var _this$state = _this.state,\n          expandedKeys = _this$state.expandedKeys,\n          keyEntities = _this$state.keyEntities;\n      var onDragStart = _this.props.onDragStart;\n      var eventKey = node.props.eventKey;\n      _this.dragNode = node;\n      _this.dragStartMousePosition = {\n        x: event.clientX,\n        y: event.clientY\n      };\n      var newExpandedKeys = arrDel(expandedKeys, eventKey);\n\n      _this.setState({\n        draggingNodeKey: eventKey,\n        dragChildrenKeys: getDragChildrenKeys(eventKey, keyEntities),\n        indent: _this.listRef.current.getIndentWidth()\n      });\n\n      _this.setExpandedKeys(newExpandedKeys);\n\n      window.addEventListener('dragend', _this.onWindowDragEnd);\n\n      if (onDragStart) {\n        onDragStart({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n\n    _this.onNodeDragEnter = function (event, node) {\n      var _this$state2 = _this.state,\n          expandedKeys = _this$state2.expandedKeys,\n          keyEntities = _this$state2.keyEntities,\n          dragChildrenKeys = _this$state2.dragChildrenKeys,\n          flattenNodes = _this$state2.flattenNodes,\n          indent = _this$state2.indent;\n      var _this$props = _this.props,\n          onDragEnter = _this$props.onDragEnter,\n          onExpand = _this$props.onExpand,\n          allowDrop = _this$props.allowDrop,\n          direction = _this$props.direction;\n      var _node$props = node.props,\n          pos = _node$props.pos,\n          eventKey = _node$props.eventKey;\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          dragNode = _assertThisInitialize.dragNode; // record the key of node which is latest entered, used in dragleave event.\n\n\n      if (_this.currentMouseOverDroppableNodeKey !== eventKey) {\n        _this.currentMouseOverDroppableNodeKey = eventKey;\n      }\n\n      if (!dragNode) {\n        _this.resetDragState();\n\n        return;\n      }\n\n      var _calcDropPosition = calcDropPosition(event, dragNode, node, indent, _this.dragStartMousePosition, allowDrop, flattenNodes, keyEntities, expandedKeys, direction),\n          dropPosition = _calcDropPosition.dropPosition,\n          dropLevelOffset = _calcDropPosition.dropLevelOffset,\n          dropTargetKey = _calcDropPosition.dropTargetKey,\n          dropContainerKey = _calcDropPosition.dropContainerKey,\n          dropTargetPos = _calcDropPosition.dropTargetPos,\n          dropAllowed = _calcDropPosition.dropAllowed,\n          dragOverNodeKey = _calcDropPosition.dragOverNodeKey;\n\n      if ( // don't allow drop inside its children\n      dragChildrenKeys.indexOf(dropTargetKey) !== -1 || // don't allow drop when drop is not allowed caculated by calcDropPosition\n      !dropAllowed) {\n        _this.resetDragState();\n\n        return;\n      } // Side effect for delay drag\n\n\n      if (!_this.delayedDragEnterLogic) {\n        _this.delayedDragEnterLogic = {};\n      }\n\n      Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n        clearTimeout(_this.delayedDragEnterLogic[key]);\n      });\n\n      if (dragNode.props.eventKey !== node.props.eventKey) {\n        // hoist expand logic here\n        // since if logic is on the bottom\n        // it will be blocked by abstract dragover node check\n        //   => if you dragenter from top, you mouse will still be consider as in the top node\n        event.persist();\n        _this.delayedDragEnterLogic[pos] = window.setTimeout(function () {\n          if (_this.state.draggingNodeKey === null) return;\n\n          var newExpandedKeys = _toConsumableArray(expandedKeys);\n\n          var entity = keyEntities[node.props.eventKey];\n\n          if (entity && (entity.children || []).length) {\n            newExpandedKeys = arrAdd(expandedKeys, node.props.eventKey);\n          }\n\n          if (!('expandedKeys' in _this.props)) {\n            _this.setExpandedKeys(newExpandedKeys);\n          }\n\n          if (onExpand) {\n            onExpand(newExpandedKeys, {\n              node: convertNodePropsToEventData(node.props),\n              expanded: true,\n              nativeEvent: event.nativeEvent\n            });\n          }\n        }, 800);\n      } // Skip if drag node is self\n\n\n      if (dragNode.props.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        _this.resetDragState();\n\n        return;\n      } // Update drag over node and drag state\n\n\n      _this.setState({\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        dropLevelOffset: dropLevelOffset,\n        dropTargetKey: dropTargetKey,\n        dropContainerKey: dropContainerKey,\n        dropTargetPos: dropTargetPos,\n        dropAllowed: dropAllowed\n      });\n\n      if (onDragEnter) {\n        onDragEnter({\n          event: event,\n          node: convertNodePropsToEventData(node.props),\n          expandedKeys: expandedKeys\n        });\n      }\n    };\n\n    _this.onNodeDragOver = function (event, node) {\n      var _this$state3 = _this.state,\n          dragChildrenKeys = _this$state3.dragChildrenKeys,\n          flattenNodes = _this$state3.flattenNodes,\n          keyEntities = _this$state3.keyEntities,\n          expandedKeys = _this$state3.expandedKeys,\n          indent = _this$state3.indent;\n      var _this$props2 = _this.props,\n          onDragOver = _this$props2.onDragOver,\n          allowDrop = _this$props2.allowDrop,\n          direction = _this$props2.direction;\n\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          dragNode = _assertThisInitialize2.dragNode;\n\n      if (!dragNode) {\n        return;\n      }\n\n      var _calcDropPosition2 = calcDropPosition(event, dragNode, node, indent, _this.dragStartMousePosition, allowDrop, flattenNodes, keyEntities, expandedKeys, direction),\n          dropPosition = _calcDropPosition2.dropPosition,\n          dropLevelOffset = _calcDropPosition2.dropLevelOffset,\n          dropTargetKey = _calcDropPosition2.dropTargetKey,\n          dropContainerKey = _calcDropPosition2.dropContainerKey,\n          dropAllowed = _calcDropPosition2.dropAllowed,\n          dropTargetPos = _calcDropPosition2.dropTargetPos,\n          dragOverNodeKey = _calcDropPosition2.dragOverNodeKey;\n\n      if (dragChildrenKeys.indexOf(dropTargetKey) !== -1 || !dropAllowed) {\n        // don't allow drop inside its children\n        // don't allow drop when drop is not allowed caculated by calcDropPosition\n        return;\n      } // Update drag position\n\n\n      if (dragNode.props.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        if (!(_this.state.dropPosition === null && _this.state.dropLevelOffset === null && _this.state.dropTargetKey === null && _this.state.dropContainerKey === null && _this.state.dropTargetPos === null && _this.state.dropAllowed === false && _this.state.dragOverNodeKey === null)) {\n          _this.resetDragState();\n        }\n      } else if (!(dropPosition === _this.state.dropPosition && dropLevelOffset === _this.state.dropLevelOffset && dropTargetKey === _this.state.dropTargetKey && dropContainerKey === _this.state.dropContainerKey && dropTargetPos === _this.state.dropTargetPos && dropAllowed === _this.state.dropAllowed && dragOverNodeKey === _this.state.dragOverNodeKey)) {\n        _this.setState({\n          dropPosition: dropPosition,\n          dropLevelOffset: dropLevelOffset,\n          dropTargetKey: dropTargetKey,\n          dropContainerKey: dropContainerKey,\n          dropTargetPos: dropTargetPos,\n          dropAllowed: dropAllowed,\n          dragOverNodeKey: dragOverNodeKey\n        });\n      }\n\n      if (onDragOver) {\n        onDragOver({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n\n    _this.onNodeDragLeave = function (event, node) {\n      // if it is outside the droppable area\n      // currentMouseOverDroppableNodeKey will be updated in dragenter event when into another droppable receiver.\n      if (_this.currentMouseOverDroppableNodeKey === node.props.eventKey && !event.currentTarget.contains(event.relatedTarget)) {\n        _this.resetDragState();\n\n        _this.currentMouseOverDroppableNodeKey = null;\n      }\n\n      var onDragLeave = _this.props.onDragLeave;\n\n      if (onDragLeave) {\n        onDragLeave({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n\n    _this.onWindowDragEnd = function (event) {\n      _this.onNodeDragEnd(event, null, true);\n\n      window.removeEventListener('dragend', _this.onWindowDragEnd);\n    };\n\n    _this.onNodeDragEnd = function (event, node) {\n      var outsideTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var onDragEnd = _this.props.onDragEnd;\n\n      _this.setState({\n        dragOverNodeKey: null\n      });\n\n      _this.cleanDragState();\n\n      if (onDragEnd && !outsideTree) {\n        onDragEnd({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.onNodeDrop = function (event, node) {\n      var _this$getActiveItem;\n\n      var outsideTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var _this$state4 = _this.state,\n          dragChildrenKeys = _this$state4.dragChildrenKeys,\n          dropPosition = _this$state4.dropPosition,\n          dropTargetKey = _this$state4.dropTargetKey,\n          dropTargetPos = _this$state4.dropTargetPos,\n          dropAllowed = _this$state4.dropAllowed;\n      if (!dropAllowed) return;\n      var onDrop = _this.props.onDrop;\n\n      _this.setState({\n        dragOverNodeKey: null\n      });\n\n      _this.cleanDragState();\n\n      if (dropTargetKey === null) return;\n\n      var abstractDropNodeProps = _objectSpread(_objectSpread({}, getTreeNodeProps(dropTargetKey, _this.getTreeNodeRequiredProps())), {}, {\n        active: ((_this$getActiveItem = _this.getActiveItem()) === null || _this$getActiveItem === void 0 ? void 0 : _this$getActiveItem.data.key) === dropTargetKey,\n        data: _this.state.keyEntities[dropTargetKey].node\n      });\n\n      var dropToChild = dragChildrenKeys.indexOf(dropTargetKey) !== -1;\n      warning(!dropToChild, \"Can not drop to dragNode's children node. This is a bug of rc-tree. Please report an issue.\");\n      var posArr = posToArr(dropTargetPos);\n      var dropResult = {\n        event: event,\n        node: convertNodePropsToEventData(abstractDropNodeProps),\n        dragNode: _this.dragNode ? convertNodePropsToEventData(_this.dragNode.props) : null,\n        dragNodesKeys: [_this.dragNode.props.eventKey].concat(dragChildrenKeys),\n        dropToGap: dropPosition !== 0,\n        dropPosition: dropPosition + Number(posArr[posArr.length - 1])\n      };\n\n      if (onDrop && !outsideTree) {\n        onDrop(dropResult);\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.cleanDragState = function () {\n      var draggingNodeKey = _this.state.draggingNodeKey;\n\n      if (draggingNodeKey !== null) {\n        _this.setState({\n          draggingNodeKey: null,\n          dropPosition: null,\n          dropContainerKey: null,\n          dropTargetKey: null,\n          dropLevelOffset: null,\n          dropAllowed: true,\n          dragOverNodeKey: null\n        });\n      }\n\n      _this.dragStartMousePosition = null;\n      _this.currentMouseOverDroppableNodeKey = null;\n    };\n\n    _this.onNodeClick = function (e, treeNode) {\n      var onClick = _this.props.onClick;\n\n      if (onClick) {\n        onClick(e, treeNode);\n      }\n    };\n\n    _this.onNodeDoubleClick = function (e, treeNode) {\n      var onDoubleClick = _this.props.onDoubleClick;\n\n      if (onDoubleClick) {\n        onDoubleClick(e, treeNode);\n      }\n    };\n\n    _this.onNodeSelect = function (e, treeNode) {\n      var selectedKeys = _this.state.selectedKeys;\n      var _this$state5 = _this.state,\n          keyEntities = _this$state5.keyEntities,\n          fieldNames = _this$state5.fieldNames;\n      var _this$props3 = _this.props,\n          onSelect = _this$props3.onSelect,\n          multiple = _this$props3.multiple;\n      var selected = treeNode.selected;\n      var key = treeNode[fieldNames.key];\n      var targetSelected = !selected; // Update selected keys\n\n      if (!targetSelected) {\n        selectedKeys = arrDel(selectedKeys, key);\n      } else if (!multiple) {\n        selectedKeys = [key];\n      } else {\n        selectedKeys = arrAdd(selectedKeys, key);\n      } // [Legacy] Not found related usage in doc or upper libs\n\n\n      var selectedNodes = selectedKeys.map(function (selectedKey) {\n        var entity = keyEntities[selectedKey];\n        if (!entity) return null;\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n\n      _this.setUncontrolledState({\n        selectedKeys: selectedKeys\n      });\n\n      if (onSelect) {\n        onSelect(selectedKeys, {\n          event: 'select',\n          selected: targetSelected,\n          node: treeNode,\n          selectedNodes: selectedNodes,\n          nativeEvent: e.nativeEvent\n        });\n      }\n    };\n\n    _this.onNodeCheck = function (e, treeNode, checked) {\n      var _this$state6 = _this.state,\n          keyEntities = _this$state6.keyEntities,\n          oriCheckedKeys = _this$state6.checkedKeys,\n          oriHalfCheckedKeys = _this$state6.halfCheckedKeys;\n      var _this$props4 = _this.props,\n          checkStrictly = _this$props4.checkStrictly,\n          onCheck = _this$props4.onCheck;\n      var key = treeNode.key; // Prepare trigger arguments\n\n      var checkedObj;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e.nativeEvent\n      };\n\n      if (checkStrictly) {\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, key) : arrDel(oriCheckedKeys, key);\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, key);\n        checkedObj = {\n          checked: checkedKeys,\n          halfChecked: halfCheckedKeys\n        };\n        eventObj.checkedNodes = checkedKeys.map(function (checkedKey) {\n          return keyEntities[checkedKey];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: checkedKeys\n        });\n      } else {\n        // Always fill first\n        var _conductCheck = conductCheck([].concat(_toConsumableArray(oriCheckedKeys), [key]), true, keyEntities),\n            _checkedKeys = _conductCheck.checkedKeys,\n            _halfCheckedKeys = _conductCheck.halfCheckedKeys; // If remove, we do it again to correction\n\n\n        if (!checked) {\n          var keySet = new Set(_checkedKeys);\n          keySet.delete(key);\n\n          var _conductCheck2 = conductCheck(Array.from(keySet), {\n            checked: false,\n            halfCheckedKeys: _halfCheckedKeys\n          }, keyEntities);\n\n          _checkedKeys = _conductCheck2.checkedKeys;\n          _halfCheckedKeys = _conductCheck2.halfCheckedKeys;\n        }\n\n        checkedObj = _checkedKeys; // [Legacy] This is used for `rc-tree-select`\n\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\n\n        _checkedKeys.forEach(function (checkedKey) {\n          var entity = keyEntities[checkedKey];\n          if (!entity) return;\n          var node = entity.node,\n              pos = entity.pos;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: _checkedKeys\n        }, false, {\n          halfCheckedKeys: _halfCheckedKeys\n        });\n      }\n\n      if (onCheck) {\n        onCheck(checkedObj, eventObj);\n      }\n    };\n\n    _this.onNodeLoad = function (treeNode) {\n      var key = treeNode.key;\n      var loadPromise = new Promise(function (resolve, reject) {\n        // We need to get the latest state of loading/loaded keys\n        _this.setState(function (_ref) {\n          var _ref$loadedKeys = _ref.loadedKeys,\n              loadedKeys = _ref$loadedKeys === void 0 ? [] : _ref$loadedKeys,\n              _ref$loadingKeys = _ref.loadingKeys,\n              loadingKeys = _ref$loadingKeys === void 0 ? [] : _ref$loadingKeys;\n          var _this$props5 = _this.props,\n              loadData = _this$props5.loadData,\n              onLoad = _this$props5.onLoad;\n\n          if (!loadData || loadedKeys.indexOf(key) !== -1 || loadingKeys.indexOf(key) !== -1) {\n            return null;\n          } // Process load data\n\n\n          var promise = loadData(treeNode);\n          promise.then(function () {\n            var currentLoadedKeys = _this.state.loadedKeys;\n            var newLoadedKeys = arrAdd(currentLoadedKeys, key); // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n            // https://github.com/ant-design/ant-design/issues/12464\n\n            if (onLoad) {\n              onLoad(newLoadedKeys, {\n                event: 'load',\n                node: treeNode\n              });\n            }\n\n            _this.setUncontrolledState({\n              loadedKeys: newLoadedKeys\n            });\n\n            _this.setState(function (prevState) {\n              return {\n                loadingKeys: arrDel(prevState.loadingKeys, key)\n              };\n            });\n\n            resolve();\n          }).catch(function (e) {\n            _this.setState(function (prevState) {\n              return {\n                loadingKeys: arrDel(prevState.loadingKeys, key)\n              };\n            }); // If exceed max retry times, we give up retry\n\n\n            _this.loadingRetryTimes[key] = (_this.loadingRetryTimes[key] || 0) + 1;\n\n            if (_this.loadingRetryTimes[key] >= MAX_RETRY_TIMES) {\n              var currentLoadedKeys = _this.state.loadedKeys;\n              warning(false, 'Retry for `loadData` many times but still failed. No more retry.');\n\n              _this.setUncontrolledState({\n                loadedKeys: arrAdd(currentLoadedKeys, key)\n              });\n\n              resolve();\n            }\n\n            reject(e);\n          });\n          return {\n            loadingKeys: arrAdd(loadingKeys, key)\n          };\n        });\n      }); // Not care warning if we ignore this\n\n      loadPromise.catch(function () {});\n      return loadPromise;\n    };\n\n    _this.onNodeMouseEnter = function (event, node) {\n      var onMouseEnter = _this.props.onMouseEnter;\n\n      if (onMouseEnter) {\n        onMouseEnter({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeMouseLeave = function (event, node) {\n      var onMouseLeave = _this.props.onMouseLeave;\n\n      if (onMouseLeave) {\n        onMouseLeave({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeContextMenu = function (event, node) {\n      var onRightClick = _this.props.onRightClick;\n\n      if (onRightClick) {\n        event.preventDefault();\n        onRightClick({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onFocus = function () {\n      var onFocus = _this.props.onFocus;\n\n      _this.setState({\n        focused: true\n      });\n\n      if (onFocus) {\n        onFocus.apply(void 0, arguments);\n      }\n    };\n\n    _this.onBlur = function () {\n      var onBlur = _this.props.onBlur;\n\n      _this.setState({\n        focused: false\n      });\n\n      _this.onActiveChange(null);\n\n      if (onBlur) {\n        onBlur.apply(void 0, arguments);\n      }\n    };\n\n    _this.getTreeNodeRequiredProps = function () {\n      var _this$state7 = _this.state,\n          expandedKeys = _this$state7.expandedKeys,\n          selectedKeys = _this$state7.selectedKeys,\n          loadedKeys = _this$state7.loadedKeys,\n          loadingKeys = _this$state7.loadingKeys,\n          checkedKeys = _this$state7.checkedKeys,\n          halfCheckedKeys = _this$state7.halfCheckedKeys,\n          dragOverNodeKey = _this$state7.dragOverNodeKey,\n          dropPosition = _this$state7.dropPosition,\n          keyEntities = _this$state7.keyEntities;\n      return {\n        expandedKeys: expandedKeys || [],\n        selectedKeys: selectedKeys || [],\n        loadedKeys: loadedKeys || [],\n        loadingKeys: loadingKeys || [],\n        checkedKeys: checkedKeys || [],\n        halfCheckedKeys: halfCheckedKeys || [],\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        keyEntities: keyEntities\n      };\n    };\n\n    _this.setExpandedKeys = function (expandedKeys) {\n      var _this$state8 = _this.state,\n          treeData = _this$state8.treeData,\n          fieldNames = _this$state8.fieldNames;\n      var flattenNodes = flattenTreeData(treeData, expandedKeys, fieldNames);\n\n      _this.setUncontrolledState({\n        expandedKeys: expandedKeys,\n        flattenNodes: flattenNodes\n      }, true);\n    };\n\n    _this.onNodeExpand = function (e, treeNode) {\n      var expandedKeys = _this.state.expandedKeys;\n      var _this$state9 = _this.state,\n          listChanging = _this$state9.listChanging,\n          fieldNames = _this$state9.fieldNames;\n      var _this$props6 = _this.props,\n          onExpand = _this$props6.onExpand,\n          loadData = _this$props6.loadData;\n      var expanded = treeNode.expanded;\n      var key = treeNode[fieldNames.key]; // Do nothing when motion is in progress\n\n      if (listChanging) {\n        return;\n      } // Update selected keys\n\n\n      var index = expandedKeys.indexOf(key);\n      var targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n\n      if (targetExpanded) {\n        expandedKeys = arrAdd(expandedKeys, key);\n      } else {\n        expandedKeys = arrDel(expandedKeys, key);\n      }\n\n      _this.setExpandedKeys(expandedKeys);\n\n      if (onExpand) {\n        onExpand(expandedKeys, {\n          node: treeNode,\n          expanded: targetExpanded,\n          nativeEvent: e.nativeEvent\n        });\n      } // Async Load data\n\n\n      if (targetExpanded && loadData) {\n        var loadPromise = _this.onNodeLoad(treeNode);\n\n        if (loadPromise) {\n          loadPromise.then(function () {\n            // [Legacy] Refresh logic\n            var newFlattenTreeData = flattenTreeData(_this.state.treeData, expandedKeys, fieldNames);\n\n            _this.setUncontrolledState({\n              flattenNodes: newFlattenTreeData\n            });\n          }).catch(function () {\n            var currentExpandedKeys = _this.state.expandedKeys;\n            var expandedKeysToRestore = arrDel(currentExpandedKeys, key);\n\n            _this.setExpandedKeys(expandedKeysToRestore);\n          });\n        }\n      }\n    };\n\n    _this.onListChangeStart = function () {\n      _this.setUncontrolledState({\n        listChanging: true\n      });\n    };\n\n    _this.onListChangeEnd = function () {\n      setTimeout(function () {\n        _this.setUncontrolledState({\n          listChanging: false\n        });\n      });\n    };\n\n    _this.onActiveChange = function (newActiveKey) {\n      var activeKey = _this.state.activeKey;\n      var onActiveChange = _this.props.onActiveChange;\n\n      if (activeKey === newActiveKey) {\n        return;\n      }\n\n      _this.setState({\n        activeKey: newActiveKey\n      });\n\n      if (newActiveKey !== null) {\n        _this.scrollTo({\n          key: newActiveKey\n        });\n      }\n\n      if (onActiveChange) {\n        onActiveChange(newActiveKey);\n      }\n    };\n\n    _this.getActiveItem = function () {\n      var _this$state10 = _this.state,\n          activeKey = _this$state10.activeKey,\n          flattenNodes = _this$state10.flattenNodes;\n\n      if (activeKey === null) {\n        return null;\n      }\n\n      return flattenNodes.find(function (_ref2) {\n        var key = _ref2.key;\n        return key === activeKey;\n      }) || null;\n    };\n\n    _this.offsetActiveKey = function (offset) {\n      var _this$state11 = _this.state,\n          flattenNodes = _this$state11.flattenNodes,\n          activeKey = _this$state11.activeKey;\n      var index = flattenNodes.findIndex(function (_ref3) {\n        var key = _ref3.key;\n        return key === activeKey;\n      }); // Align with index\n\n      if (index === -1 && offset < 0) {\n        index = flattenNodes.length;\n      }\n\n      index = (index + offset + flattenNodes.length) % flattenNodes.length;\n      var item = flattenNodes[index];\n\n      if (item) {\n        var key = item.key;\n\n        _this.onActiveChange(key);\n      } else {\n        _this.onActiveChange(null);\n      }\n    };\n\n    _this.onKeyDown = function (event) {\n      var _this$state12 = _this.state,\n          activeKey = _this$state12.activeKey,\n          expandedKeys = _this$state12.expandedKeys,\n          checkedKeys = _this$state12.checkedKeys;\n      var _this$props7 = _this.props,\n          onKeyDown = _this$props7.onKeyDown,\n          checkable = _this$props7.checkable,\n          selectable = _this$props7.selectable; // >>>>>>>>>> Direction\n\n      switch (event.which) {\n        case KeyCode.UP:\n          {\n            _this.offsetActiveKey(-1);\n\n            event.preventDefault();\n            break;\n          }\n\n        case KeyCode.DOWN:\n          {\n            _this.offsetActiveKey(1);\n\n            event.preventDefault();\n            break;\n          }\n      } // >>>>>>>>>> Expand & Selection\n\n\n      var activeItem = _this.getActiveItem();\n\n      if (activeItem && activeItem.data) {\n        var treeNodeRequiredProps = _this.getTreeNodeRequiredProps();\n\n        var expandable = activeItem.data.isLeaf === false || !!(activeItem.data.children || []).length;\n        var eventNode = convertNodePropsToEventData(_objectSpread(_objectSpread({}, getTreeNodeProps(activeKey, treeNodeRequiredProps)), {}, {\n          data: activeItem.data,\n          active: true\n        }));\n\n        switch (event.which) {\n          // >>> Expand\n          case KeyCode.LEFT:\n            {\n              // Collapse if possible\n              if (expandable && expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.parent) {\n                _this.onActiveChange(activeItem.parent.data.key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n\n          case KeyCode.RIGHT:\n            {\n              // Expand if possible\n              if (expandable && !expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.children && activeItem.children.length) {\n                _this.onActiveChange(activeItem.children[0].data.key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n          // Selection\n\n          case KeyCode.ENTER:\n          case KeyCode.SPACE:\n            {\n              if (checkable && !eventNode.disabled && eventNode.checkable !== false && !eventNode.disableCheckbox) {\n                _this.onNodeCheck({}, eventNode, !checkedKeys.includes(activeKey));\n              } else if (!checkable && selectable && !eventNode.disabled && eventNode.selectable !== false) {\n                _this.onNodeSelect({}, eventNode);\n              }\n\n              break;\n            }\n        }\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event);\n      }\n    };\n\n    _this.setUncontrolledState = function (state) {\n      var atomic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var forceState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      if (!_this.destroyed) {\n        var needSync = false;\n        var allPassed = true;\n        var newState = {};\n        Object.keys(state).forEach(function (name) {\n          if (name in _this.props) {\n            allPassed = false;\n            return;\n          }\n\n          needSync = true;\n          newState[name] = state[name];\n        });\n\n        if (needSync && (!atomic || allPassed)) {\n          _this.setState(_objectSpread(_objectSpread({}, newState), forceState));\n        }\n      }\n    };\n\n    _this.scrollTo = function (scroll) {\n      _this.listRef.current.scrollTo(scroll);\n    };\n\n    return _this;\n  }\n\n  _createClass(Tree, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('dragend', this.onWindowDragEnd);\n      this.destroyed = true;\n    }\n  }, {\n    key: \"resetDragState\",\n    value: function resetDragState() {\n      this.setState({\n        dragOverNodeKey: null,\n        dropPosition: null,\n        dropLevelOffset: null,\n        dropTargetKey: null,\n        dropContainerKey: null,\n        dropTargetPos: null,\n        dropAllowed: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var _this$state13 = this.state,\n          focused = _this$state13.focused,\n          flattenNodes = _this$state13.flattenNodes,\n          keyEntities = _this$state13.keyEntities,\n          draggingNodeKey = _this$state13.draggingNodeKey,\n          activeKey = _this$state13.activeKey,\n          dropLevelOffset = _this$state13.dropLevelOffset,\n          dropContainerKey = _this$state13.dropContainerKey,\n          dropTargetKey = _this$state13.dropTargetKey,\n          dropPosition = _this$state13.dropPosition,\n          dragOverNodeKey = _this$state13.dragOverNodeKey,\n          indent = _this$state13.indent;\n      var _this$props8 = this.props,\n          prefixCls = _this$props8.prefixCls,\n          className = _this$props8.className,\n          style = _this$props8.style,\n          showLine = _this$props8.showLine,\n          focusable = _this$props8.focusable,\n          _this$props8$tabIndex = _this$props8.tabIndex,\n          tabIndex = _this$props8$tabIndex === void 0 ? 0 : _this$props8$tabIndex,\n          selectable = _this$props8.selectable,\n          showIcon = _this$props8.showIcon,\n          icon = _this$props8.icon,\n          switcherIcon = _this$props8.switcherIcon,\n          draggable = _this$props8.draggable,\n          checkable = _this$props8.checkable,\n          checkStrictly = _this$props8.checkStrictly,\n          disabled = _this$props8.disabled,\n          motion = _this$props8.motion,\n          loadData = _this$props8.loadData,\n          filterTreeNode = _this$props8.filterTreeNode,\n          height = _this$props8.height,\n          itemHeight = _this$props8.itemHeight,\n          virtual = _this$props8.virtual,\n          titleRender = _this$props8.titleRender,\n          dropIndicatorRender = _this$props8.dropIndicatorRender,\n          onContextMenu = _this$props8.onContextMenu,\n          onScroll = _this$props8.onScroll,\n          direction = _this$props8.direction;\n      var domProps = pickAttrs(this.props, {\n        aria: true,\n        data: true\n      }); // It's better move to hooks but we just simply keep here\n\n      var draggableConfig;\n\n      if (draggable) {\n        if (_typeof(draggable) === 'object') {\n          draggableConfig = draggable;\n        } else if (typeof draggable === 'function') {\n          draggableConfig = {\n            nodeDraggable: draggable\n          };\n        } else {\n          draggableConfig = {};\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(TreeContext.Provider, {\n        value: {\n          prefixCls: prefixCls,\n          selectable: selectable,\n          showIcon: showIcon,\n          icon: icon,\n          switcherIcon: switcherIcon,\n          draggable: draggableConfig,\n          draggingNodeKey: draggingNodeKey,\n          checkable: checkable,\n          checkStrictly: checkStrictly,\n          disabled: disabled,\n          keyEntities: keyEntities,\n          dropLevelOffset: dropLevelOffset,\n          dropContainerKey: dropContainerKey,\n          dropTargetKey: dropTargetKey,\n          dropPosition: dropPosition,\n          dragOverNodeKey: dragOverNodeKey,\n          indent: indent,\n          direction: direction,\n          dropIndicatorRender: dropIndicatorRender,\n          loadData: loadData,\n          filterTreeNode: filterTreeNode,\n          titleRender: titleRender,\n          onNodeClick: this.onNodeClick,\n          onNodeDoubleClick: this.onNodeDoubleClick,\n          onNodeExpand: this.onNodeExpand,\n          onNodeSelect: this.onNodeSelect,\n          onNodeCheck: this.onNodeCheck,\n          onNodeLoad: this.onNodeLoad,\n          onNodeMouseEnter: this.onNodeMouseEnter,\n          onNodeMouseLeave: this.onNodeMouseLeave,\n          onNodeContextMenu: this.onNodeContextMenu,\n          onNodeDragStart: this.onNodeDragStart,\n          onNodeDragEnter: this.onNodeDragEnter,\n          onNodeDragOver: this.onNodeDragOver,\n          onNodeDragLeave: this.onNodeDragLeave,\n          onNodeDragEnd: this.onNodeDragEnd,\n          onNodeDrop: this.onNodeDrop\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        role: \"tree\",\n        className: classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-show-line\"), showLine), _defineProperty(_classNames, \"\".concat(prefixCls, \"-focused\"), focused), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active-focused\"), activeKey !== null), _classNames))\n      }, /*#__PURE__*/React.createElement(NodeList, _extends({\n        ref: this.listRef,\n        prefixCls: prefixCls,\n        style: style,\n        data: flattenNodes,\n        disabled: disabled,\n        selectable: selectable,\n        checkable: !!checkable,\n        motion: motion,\n        dragging: draggingNodeKey !== null,\n        height: height,\n        itemHeight: itemHeight,\n        virtual: virtual,\n        focusable: focusable,\n        focused: focused,\n        tabIndex: tabIndex,\n        activeItem: this.getActiveItem(),\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        onKeyDown: this.onKeyDown,\n        onActiveChange: this.onActiveChange,\n        onListChangeStart: this.onListChangeStart,\n        onListChangeEnd: this.onListChangeEnd,\n        onContextMenu: onContextMenu,\n        onScroll: onScroll\n      }, this.getTreeNodeRequiredProps(), domProps))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, prevState) {\n      var prevProps = prevState.prevProps;\n      var newState = {\n        prevProps: props\n      };\n\n      function needSync(name) {\n        return !prevProps && name in props || prevProps && prevProps[name] !== props[name];\n      } // ================== Tree Node ==================\n\n\n      var treeData; // fieldNames\n\n      var fieldNames = prevState.fieldNames;\n\n      if (needSync('fieldNames')) {\n        fieldNames = fillFieldNames(props.fieldNames);\n        newState.fieldNames = fieldNames;\n      } // Check if `treeData` or `children` changed and save into the state.\n\n\n      if (needSync('treeData')) {\n        treeData = props.treeData;\n      } else if (needSync('children')) {\n        warning(false, '`children` of Tree is deprecated. Please use `treeData` instead.');\n        treeData = convertTreeToData(props.children);\n      } // Save flatten nodes info and convert `treeData` into keyEntities\n\n\n      if (treeData) {\n        newState.treeData = treeData;\n        var entitiesMap = convertDataToEntities(treeData, {\n          fieldNames: fieldNames\n        });\n        newState.keyEntities = _objectSpread(_defineProperty({}, MOTION_KEY, MotionEntity), entitiesMap.keyEntities); // Warning if treeNode not provide key\n\n        if (process.env.NODE_ENV !== 'production') {\n          warningWithoutKey(treeData, fieldNames);\n        }\n      }\n\n      var keyEntities = newState.keyEntities || prevState.keyEntities; // ================ expandedKeys =================\n\n      if (needSync('expandedKeys') || prevProps && needSync('autoExpandParent')) {\n        newState.expandedKeys = props.autoExpandParent || !prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n      } else if (!prevProps && props.defaultExpandAll) {\n        var cloneKeyEntities = _objectSpread({}, keyEntities);\n\n        delete cloneKeyEntities[MOTION_KEY];\n        newState.expandedKeys = Object.keys(cloneKeyEntities).map(function (key) {\n          return cloneKeyEntities[key].key;\n        });\n      } else if (!prevProps && props.defaultExpandedKeys) {\n        newState.expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n      }\n\n      if (!newState.expandedKeys) {\n        delete newState.expandedKeys;\n      } // ================ flattenNodes =================\n\n\n      if (treeData || newState.expandedKeys) {\n        var flattenNodes = flattenTreeData(treeData || prevState.treeData, newState.expandedKeys || prevState.expandedKeys, fieldNames);\n        newState.flattenNodes = flattenNodes;\n      } // ================ selectedKeys =================\n\n\n      if (props.selectable) {\n        if (needSync('selectedKeys')) {\n          newState.selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!prevProps && props.defaultSelectedKeys) {\n          newState.selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      } // ================= checkedKeys =================\n\n\n      if (props.checkable) {\n        var checkedKeyEntity;\n\n        if (needSync('checkedKeys')) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!prevProps && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeData) {\n          // If `treeData` changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: prevState.checkedKeys,\n            halfCheckedKeys: prevState.halfCheckedKeys\n          };\n        }\n\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n              _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n              checkedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\n              _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n              halfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\n\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n            checkedKeys = conductKeys.checkedKeys;\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n\n          newState.checkedKeys = checkedKeys;\n          newState.halfCheckedKeys = halfCheckedKeys;\n        }\n      } // ================= loadedKeys ==================\n\n\n      if (needSync('loadedKeys')) {\n        newState.loadedKeys = props.loadedKeys;\n      }\n\n      return newState;\n    }\n  }]);\n\n  return Tree;\n}(React.Component);\n\nTree.defaultProps = {\n  prefixCls: 'rc-tree',\n  showLine: false,\n  showIcon: true,\n  selectable: true,\n  multiple: false,\n  checkable: false,\n  disabled: false,\n  checkStrictly: false,\n  draggable: false,\n  defaultExpandParent: true,\n  autoExpandParent: false,\n  defaultExpandAll: false,\n  defaultExpandedKeys: [],\n  defaultCheckedKeys: [],\n  defaultSelectedKeys: [],\n  dropIndicatorRender: DropIndicator,\n  allowDrop: function allowDrop() {\n    return true;\n  }\n};\nTree.TreeNode = TreeNode;\nexport default Tree;"],"mappings":"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"},"metadata":{},"sourceType":"module"}